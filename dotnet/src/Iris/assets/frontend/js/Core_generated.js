// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Iris = Iris || {};

/**
 * @const
 * @namespace
 */
Iris.Serialization = Iris.Serialization || {};

/**
 * @enum
 */
Iris.Serialization.RoleFB = {
  RendererFB: 0
};

/**
 * @enum
 */
Iris.Serialization.BehaviorFB = {
  ToggleFB: 0,
  BangFB: 1
};

/**
 * @enum
 */
Iris.Serialization.StringTypeFB = {
  SimpleFB: 0,
  MultiLineFB: 1,
  FileNameFB: 2,
  DirectoryFB: 3,
  UrlFB: 4,
  IPFB: 5
};

/**
 * @enum
 */
Iris.Serialization.ColorSpaceTypeFB = {
  NONE: 0,
  RGBAValueFB: 1,
  HSLAValueFB: 2
};

/**
 * @enum
 */
Iris.Serialization.SliceTypeFB = {
  NONE: 0,
  StringSliceFB: 1,
  IntSliceFB: 2,
  FloatSliceFB: 3,
  DoubleSliceFB: 4,
  BoolSliceFB: 5,
  ByteSliceFB: 6,
  EnumSliceFB: 7,
  ColorSliceFB: 8,
  CompoundSliceFB: 9
};

/**
 * @enum
 */
Iris.Serialization.PinTypeFB = {
  NONE: 0,
  StringPinFB: 1,
  IntPinFB: 2,
  FloatPinFB: 3,
  DoublePinFB: 4,
  BoolPinFB: 5,
  BytePinFB: 6,
  EnumPinFB: 7,
  ColorPinFB: 8,
  CompoundPinFB: 9
};

/**
 * @enum
 */
Iris.Serialization.RaftMemberStateFB = {
  JoiningFB: 0,
  RunningFB: 1,
  FailedFB: 2
};

/**
 * @enum
 */
Iris.Serialization.ErrorTypeFB = {
  GitErrorFB: 0,
  ProjectErrorFB: 1,
  AssetErrorFB: 2,
  ParseErrorFB: 3,
  SocketErrorFB: 4,
  ClientErrorFB: 5,
  IOErrorFB: 6,
  RaftErrorFB: 7,
  OKFB: 8,
  OtherFB: 9
};

/**
 * @enum
 */
Iris.Serialization.StateMachinePayloadFB = {
  NONE: 0,
  CueFB: 1,
  CueListFB: 2,
  PinFB: 3,
  PatchFB: 4,
  IrisClientFB: 5,
  RaftMemberFB: 6,
  UserFB: 7,
  SessionFB: 8,
  LogEventFB: 9,
  StringFB: 10,
  StateFB: 11,
  SlicesFB: 12,
  ProjectFB: 13,
  DiscoveredServiceFB: 14
};

/**
 * @enum
 */
Iris.Serialization.StateMachineActionFB = {
  AddFB: 0,
  UpdateFB: 1,
  RemoveFB: 2,
  LogEventFB: 3,
  DataSnapshotFB: 4,
  CallFB: 5,
  UndoFB: 6,
  RedoFB: 7,
  ResetFB: 8,
  SaveProjectFB: 9,
  SetLogLevelFB: 10
};

/**
 * @constructor
 */
Iris.Serialization.IrisClientFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.IrisClientFB}
 */
Iris.Serialization.IrisClientFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.IrisClientFB=} obj
 * @returns {Iris.Serialization.IrisClientFB}
 */
Iris.Serialization.IrisClientFB.getRootAsIrisClientFB = function(bb, obj) {
  return (obj || new Iris.Serialization.IrisClientFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.IrisClientFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.IrisClientFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {Iris.Serialization.RoleFB}
 */
Iris.Serialization.IrisClientFB.prototype.Role = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {Iris.Serialization.RoleFB} */ (this.bb.readUint16(this.bb_pos + offset)) : Iris.Serialization.RoleFB.RendererFB;
};

/**
 * @returns {number}
 */
Iris.Serialization.IrisClientFB.prototype.Port = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.IrisClientFB.prototype.IpAddress = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.IrisClientFB.startIrisClientFB = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.IrisClientFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.IrisClientFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Iris.Serialization.RoleFB} Role
 */
Iris.Serialization.IrisClientFB.addRole = function(builder, Role) {
  builder.addFieldInt16(2, Role, Iris.Serialization.RoleFB.RendererFB);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Port
 */
Iris.Serialization.IrisClientFB.addPort = function(builder, Port) {
  builder.addFieldInt16(3, Port, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IpAddressOffset
 */
Iris.Serialization.IrisClientFB.addIpAddress = function(builder, IpAddressOffset) {
  builder.addFieldOffset(4, IpAddressOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.IrisClientFB.endIrisClientFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.DiscoveredServiceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.DiscoveredServiceFB}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.DiscoveredServiceFB=} obj
 * @returns {Iris.Serialization.DiscoveredServiceFB}
 */
Iris.Serialization.DiscoveredServiceFB.getRootAsDiscoveredServiceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.DiscoveredServiceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.Machine = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.Port = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.FullName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.Type = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.HostName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.HostTarget = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.Aliases = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.AliasesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.Protocol = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.AddressList = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.AddressListLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.Metadata = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.DiscoveredServiceFB.prototype.MetadataLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.DiscoveredServiceFB.startDiscoveredServiceFB = function(builder) {
  builder.startObject(12);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.DiscoveredServiceFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MachineOffset
 */
Iris.Serialization.DiscoveredServiceFB.addMachine = function(builder, MachineOffset) {
  builder.addFieldOffset(1, MachineOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Port
 */
Iris.Serialization.DiscoveredServiceFB.addPort = function(builder, Port) {
  builder.addFieldInt16(2, Port, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.DiscoveredServiceFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(3, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} FullNameOffset
 */
Iris.Serialization.DiscoveredServiceFB.addFullName = function(builder, FullNameOffset) {
  builder.addFieldOffset(4, FullNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TypeOffset
 */
Iris.Serialization.DiscoveredServiceFB.addType = function(builder, TypeOffset) {
  builder.addFieldOffset(5, TypeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} HostNameOffset
 */
Iris.Serialization.DiscoveredServiceFB.addHostName = function(builder, HostNameOffset) {
  builder.addFieldOffset(6, HostNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} HostTargetOffset
 */
Iris.Serialization.DiscoveredServiceFB.addHostTarget = function(builder, HostTargetOffset) {
  builder.addFieldOffset(7, HostTargetOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} AliasesOffset
 */
Iris.Serialization.DiscoveredServiceFB.addAliases = function(builder, AliasesOffset) {
  builder.addFieldOffset(8, AliasesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.DiscoveredServiceFB.createAliasesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.DiscoveredServiceFB.startAliasesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ProtocolOffset
 */
Iris.Serialization.DiscoveredServiceFB.addProtocol = function(builder, ProtocolOffset) {
  builder.addFieldOffset(9, ProtocolOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} AddressListOffset
 */
Iris.Serialization.DiscoveredServiceFB.addAddressList = function(builder, AddressListOffset) {
  builder.addFieldOffset(10, AddressListOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.DiscoveredServiceFB.createAddressListVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.DiscoveredServiceFB.startAddressListVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MetadataOffset
 */
Iris.Serialization.DiscoveredServiceFB.addMetadata = function(builder, MetadataOffset) {
  builder.addFieldOffset(11, MetadataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.DiscoveredServiceFB.createMetadataVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.DiscoveredServiceFB.startMetadataVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.DiscoveredServiceFB.endDiscoveredServiceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.StringFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.StringFB}
 */
Iris.Serialization.StringFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.StringFB=} obj
 * @returns {Iris.Serialization.StringFB}
 */
Iris.Serialization.StringFB.getRootAsStringFB = function(bb, obj) {
  return (obj || new Iris.Serialization.StringFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.StringFB.prototype.Value = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.StringFB.startStringFB = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ValueOffset
 */
Iris.Serialization.StringFB.addValue = function(builder, ValueOffset) {
  builder.addFieldOffset(0, ValueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StringFB.endStringFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.LogEventFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.LogEventFB}
 */
Iris.Serialization.LogEventFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.LogEventFB=} obj
 * @returns {Iris.Serialization.LogEventFB}
 */
Iris.Serialization.LogEventFB.getRootAsLogEventFB = function(bb, obj) {
  return (obj || new Iris.Serialization.LogEventFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.LogEventFB.prototype.Time = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.LogEventFB.prototype.Thread = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.LogEventFB.prototype.Tier = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.LogEventFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.LogEventFB.prototype.Tag = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.LogEventFB.prototype.LogLevel = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.LogEventFB.prototype.Message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.LogEventFB.startLogEventFB = function(builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Time
 */
Iris.Serialization.LogEventFB.addTime = function(builder, Time) {
  builder.addFieldInt32(0, Time, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Thread
 */
Iris.Serialization.LogEventFB.addThread = function(builder, Thread) {
  builder.addFieldInt32(1, Thread, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TierOffset
 */
Iris.Serialization.LogEventFB.addTier = function(builder, TierOffset) {
  builder.addFieldOffset(2, TierOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.LogEventFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(3, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TagOffset
 */
Iris.Serialization.LogEventFB.addTag = function(builder, TagOffset) {
  builder.addFieldOffset(4, TagOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} LogLevelOffset
 */
Iris.Serialization.LogEventFB.addLogLevel = function(builder, LogLevelOffset) {
  builder.addFieldOffset(5, LogLevelOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MessageOffset
 */
Iris.Serialization.LogEventFB.addMessage = function(builder, MessageOffset) {
  builder.addFieldOffset(6, MessageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.LogEventFB.endLogEventFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.StringSliceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.StringSliceFB}
 */
Iris.Serialization.StringSliceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.StringSliceFB=} obj
 * @returns {Iris.Serialization.StringSliceFB}
 */
Iris.Serialization.StringSliceFB.getRootAsStringSliceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.StringSliceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.StringSliceFB.prototype.Index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.StringSliceFB.prototype.Value = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.StringSliceFB.startStringSliceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Index
 */
Iris.Serialization.StringSliceFB.addIndex = function(builder, Index) {
  builder.addFieldInt32(0, Index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ValueOffset
 */
Iris.Serialization.StringSliceFB.addValue = function(builder, ValueOffset) {
  builder.addFieldOffset(1, ValueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StringSliceFB.endStringSliceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.IntSliceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.IntSliceFB}
 */
Iris.Serialization.IntSliceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.IntSliceFB=} obj
 * @returns {Iris.Serialization.IntSliceFB}
 */
Iris.Serialization.IntSliceFB.getRootAsIntSliceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.IntSliceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.IntSliceFB.prototype.Index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.IntSliceFB.prototype.Value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.IntSliceFB.startIntSliceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Index
 */
Iris.Serialization.IntSliceFB.addIndex = function(builder, Index) {
  builder.addFieldInt32(0, Index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Value
 */
Iris.Serialization.IntSliceFB.addValue = function(builder, Value) {
  builder.addFieldInt32(1, Value, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.IntSliceFB.endIntSliceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.FloatSliceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.FloatSliceFB}
 */
Iris.Serialization.FloatSliceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.FloatSliceFB=} obj
 * @returns {Iris.Serialization.FloatSliceFB}
 */
Iris.Serialization.FloatSliceFB.getRootAsFloatSliceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.FloatSliceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.FloatSliceFB.prototype.Index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.FloatSliceFB.prototype.Value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.FloatSliceFB.startFloatSliceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Index
 */
Iris.Serialization.FloatSliceFB.addIndex = function(builder, Index) {
  builder.addFieldInt32(0, Index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Value
 */
Iris.Serialization.FloatSliceFB.addValue = function(builder, Value) {
  builder.addFieldFloat32(1, Value, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.FloatSliceFB.endFloatSliceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.DoubleSliceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.DoubleSliceFB}
 */
Iris.Serialization.DoubleSliceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.DoubleSliceFB=} obj
 * @returns {Iris.Serialization.DoubleSliceFB}
 */
Iris.Serialization.DoubleSliceFB.getRootAsDoubleSliceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.DoubleSliceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.DoubleSliceFB.prototype.Index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.DoubleSliceFB.prototype.Value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.DoubleSliceFB.startDoubleSliceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Index
 */
Iris.Serialization.DoubleSliceFB.addIndex = function(builder, Index) {
  builder.addFieldInt32(0, Index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Value
 */
Iris.Serialization.DoubleSliceFB.addValue = function(builder, Value) {
  builder.addFieldFloat64(1, Value, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.DoubleSliceFB.endDoubleSliceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.BoolSliceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.BoolSliceFB}
 */
Iris.Serialization.BoolSliceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.BoolSliceFB=} obj
 * @returns {Iris.Serialization.BoolSliceFB}
 */
Iris.Serialization.BoolSliceFB.getRootAsBoolSliceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.BoolSliceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.BoolSliceFB.prototype.Index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
Iris.Serialization.BoolSliceFB.prototype.Value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.BoolSliceFB.startBoolSliceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Index
 */
Iris.Serialization.BoolSliceFB.addIndex = function(builder, Index) {
  builder.addFieldInt32(0, Index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} Value
 */
Iris.Serialization.BoolSliceFB.addValue = function(builder, Value) {
  builder.addFieldInt8(1, +Value, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.BoolSliceFB.endBoolSliceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.ByteSliceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.ByteSliceFB}
 */
Iris.Serialization.ByteSliceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.ByteSliceFB=} obj
 * @returns {Iris.Serialization.ByteSliceFB}
 */
Iris.Serialization.ByteSliceFB.getRootAsByteSliceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.ByteSliceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.ByteSliceFB.prototype.Index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ByteSliceFB.prototype.Value = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.ByteSliceFB.startByteSliceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Index
 */
Iris.Serialization.ByteSliceFB.addIndex = function(builder, Index) {
  builder.addFieldInt32(0, Index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ValueOffset
 */
Iris.Serialization.ByteSliceFB.addValue = function(builder, ValueOffset) {
  builder.addFieldOffset(1, ValueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ByteSliceFB.endByteSliceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.EnumPropertyFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.EnumPropertyFB}
 */
Iris.Serialization.EnumPropertyFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.EnumPropertyFB=} obj
 * @returns {Iris.Serialization.EnumPropertyFB}
 */
Iris.Serialization.EnumPropertyFB.getRootAsEnumPropertyFB = function(bb, obj) {
  return (obj || new Iris.Serialization.EnumPropertyFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.EnumPropertyFB.prototype.Key = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.EnumPropertyFB.prototype.Value = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.EnumPropertyFB.startEnumPropertyFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} KeyOffset
 */
Iris.Serialization.EnumPropertyFB.addKey = function(builder, KeyOffset) {
  builder.addFieldOffset(0, KeyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ValueOffset
 */
Iris.Serialization.EnumPropertyFB.addValue = function(builder, ValueOffset) {
  builder.addFieldOffset(1, ValueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.EnumPropertyFB.endEnumPropertyFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.EnumSliceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.EnumSliceFB}
 */
Iris.Serialization.EnumSliceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.EnumSliceFB=} obj
 * @returns {Iris.Serialization.EnumSliceFB}
 */
Iris.Serialization.EnumSliceFB.getRootAsEnumSliceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.EnumSliceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.EnumSliceFB.prototype.Index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {Iris.Serialization.EnumPropertyFB=} obj
 * @returns {Iris.Serialization.EnumPropertyFB}
 */
Iris.Serialization.EnumSliceFB.prototype.Value = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Iris.Serialization.EnumPropertyFB).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.EnumSliceFB.startEnumSliceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Index
 */
Iris.Serialization.EnumSliceFB.addIndex = function(builder, Index) {
  builder.addFieldInt32(0, Index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ValueOffset
 */
Iris.Serialization.EnumSliceFB.addValue = function(builder, ValueOffset) {
  builder.addFieldOffset(1, ValueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.EnumSliceFB.endEnumSliceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.RGBAValueFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.RGBAValueFB}
 */
Iris.Serialization.RGBAValueFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.RGBAValueFB=} obj
 * @returns {Iris.Serialization.RGBAValueFB}
 */
Iris.Serialization.RGBAValueFB.getRootAsRGBAValueFB = function(bb, obj) {
  return (obj || new Iris.Serialization.RGBAValueFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.RGBAValueFB.prototype.Red = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RGBAValueFB.prototype.Green = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RGBAValueFB.prototype.Blue = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RGBAValueFB.prototype.Alpha = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.RGBAValueFB.startRGBAValueFB = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Red
 */
Iris.Serialization.RGBAValueFB.addRed = function(builder, Red) {
  builder.addFieldInt8(0, Red, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Green
 */
Iris.Serialization.RGBAValueFB.addGreen = function(builder, Green) {
  builder.addFieldInt8(1, Green, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Blue
 */
Iris.Serialization.RGBAValueFB.addBlue = function(builder, Blue) {
  builder.addFieldInt8(2, Blue, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Alpha
 */
Iris.Serialization.RGBAValueFB.addAlpha = function(builder, Alpha) {
  builder.addFieldInt8(3, Alpha, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.RGBAValueFB.endRGBAValueFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.HSLAValueFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.HSLAValueFB}
 */
Iris.Serialization.HSLAValueFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.HSLAValueFB=} obj
 * @returns {Iris.Serialization.HSLAValueFB}
 */
Iris.Serialization.HSLAValueFB.getRootAsHSLAValueFB = function(bb, obj) {
  return (obj || new Iris.Serialization.HSLAValueFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.HSLAValueFB.prototype.Hue = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.HSLAValueFB.prototype.Saturation = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.HSLAValueFB.prototype.Lightness = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.HSLAValueFB.prototype.Alpha = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.HSLAValueFB.startHSLAValueFB = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Hue
 */
Iris.Serialization.HSLAValueFB.addHue = function(builder, Hue) {
  builder.addFieldInt8(0, Hue, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Saturation
 */
Iris.Serialization.HSLAValueFB.addSaturation = function(builder, Saturation) {
  builder.addFieldInt8(1, Saturation, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Lightness
 */
Iris.Serialization.HSLAValueFB.addLightness = function(builder, Lightness) {
  builder.addFieldInt8(2, Lightness, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Alpha
 */
Iris.Serialization.HSLAValueFB.addAlpha = function(builder, Alpha) {
  builder.addFieldInt8(3, Alpha, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.HSLAValueFB.endHSLAValueFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.ColorSpaceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.ColorSpaceFB}
 */
Iris.Serialization.ColorSpaceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.ColorSpaceFB=} obj
 * @returns {Iris.Serialization.ColorSpaceFB}
 */
Iris.Serialization.ColorSpaceFB.getRootAsColorSpaceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.ColorSpaceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Iris.Serialization.ColorSpaceTypeFB}
 */
Iris.Serialization.ColorSpaceFB.prototype.ValueType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Iris.Serialization.ColorSpaceTypeFB} */ (this.bb.readUint8(this.bb_pos + offset)) : Iris.Serialization.ColorSpaceTypeFB.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Iris.Serialization.ColorSpaceFB.prototype.Value = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.ColorSpaceFB.startColorSpaceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Iris.Serialization.ColorSpaceTypeFB} ValueType
 */
Iris.Serialization.ColorSpaceFB.addValueType = function(builder, ValueType) {
  builder.addFieldInt8(0, ValueType, Iris.Serialization.ColorSpaceTypeFB.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ValueOffset
 */
Iris.Serialization.ColorSpaceFB.addValue = function(builder, ValueOffset) {
  builder.addFieldOffset(1, ValueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ColorSpaceFB.endColorSpaceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.ColorSliceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.ColorSliceFB}
 */
Iris.Serialization.ColorSliceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.ColorSliceFB=} obj
 * @returns {Iris.Serialization.ColorSliceFB}
 */
Iris.Serialization.ColorSliceFB.getRootAsColorSliceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.ColorSliceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.ColorSliceFB.prototype.Index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {Iris.Serialization.ColorSpaceFB=} obj
 * @returns {Iris.Serialization.ColorSpaceFB}
 */
Iris.Serialization.ColorSliceFB.prototype.Value = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Iris.Serialization.ColorSpaceFB).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.ColorSliceFB.startColorSliceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Index
 */
Iris.Serialization.ColorSliceFB.addIndex = function(builder, Index) {
  builder.addFieldInt32(0, Index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ValueOffset
 */
Iris.Serialization.ColorSliceFB.addValue = function(builder, ValueOffset) {
  builder.addFieldOffset(1, ValueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ColorSliceFB.endColorSliceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.CompoundSliceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.CompoundSliceFB}
 */
Iris.Serialization.CompoundSliceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.CompoundSliceFB=} obj
 * @returns {Iris.Serialization.CompoundSliceFB}
 */
Iris.Serialization.CompoundSliceFB.getRootAsCompoundSliceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.CompoundSliceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.CompoundSliceFB.prototype.Index = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.PinFB=} obj
 * @returns {Iris.Serialization.PinFB}
 */
Iris.Serialization.CompoundSliceFB.prototype.Value = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Iris.Serialization.PinFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.CompoundSliceFB.prototype.ValueLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.CompoundSliceFB.startCompoundSliceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Index
 */
Iris.Serialization.CompoundSliceFB.addIndex = function(builder, Index) {
  builder.addFieldInt32(0, Index, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ValueOffset
 */
Iris.Serialization.CompoundSliceFB.addValue = function(builder, ValueOffset) {
  builder.addFieldOffset(1, ValueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.CompoundSliceFB.createValueVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.CompoundSliceFB.startValueVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.CompoundSliceFB.endCompoundSliceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.SliceFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.SliceFB}
 */
Iris.Serialization.SliceFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.SliceFB=} obj
 * @returns {Iris.Serialization.SliceFB}
 */
Iris.Serialization.SliceFB.getRootAsSliceFB = function(bb, obj) {
  return (obj || new Iris.Serialization.SliceFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Iris.Serialization.SliceTypeFB}
 */
Iris.Serialization.SliceFB.prototype.SliceType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Iris.Serialization.SliceTypeFB} */ (this.bb.readUint8(this.bb_pos + offset)) : Iris.Serialization.SliceTypeFB.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Iris.Serialization.SliceFB.prototype.Slice = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.SliceFB.startSliceFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Iris.Serialization.SliceTypeFB} SliceType
 */
Iris.Serialization.SliceFB.addSliceType = function(builder, SliceType) {
  builder.addFieldInt8(0, SliceType, Iris.Serialization.SliceTypeFB.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SliceOffset
 */
Iris.Serialization.SliceFB.addSlice = function(builder, SliceOffset) {
  builder.addFieldOffset(1, SliceOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.SliceFB.endSliceFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.SlicesFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.SlicesFB}
 */
Iris.Serialization.SlicesFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.SlicesFB=} obj
 * @returns {Iris.Serialization.SlicesFB}
 */
Iris.Serialization.SlicesFB.getRootAsSlicesFB = function(bb, obj) {
  return (obj || new Iris.Serialization.SlicesFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.SlicesFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.SliceFB=} obj
 * @returns {Iris.Serialization.SliceFB}
 */
Iris.Serialization.SlicesFB.prototype.Slices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Iris.Serialization.SliceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.SlicesFB.prototype.SlicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.SlicesFB.startSlicesFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.SlicesFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SlicesOffset
 */
Iris.Serialization.SlicesFB.addSlices = function(builder, SlicesOffset) {
  builder.addFieldOffset(1, SlicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.SlicesFB.createSlicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.SlicesFB.startSlicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.SlicesFB.endSlicesFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.StringPinFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.StringPinFB}
 */
Iris.Serialization.StringPinFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.StringPinFB=} obj
 * @returns {Iris.Serialization.StringPinFB}
 */
Iris.Serialization.StringPinFB.getRootAsStringPinFB = function(bb, obj) {
  return (obj || new Iris.Serialization.StringPinFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.StringPinFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.StringPinFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.StringPinFB.prototype.Patch = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.StringPinFB.prototype.Tags = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.StringPinFB.prototype.TagsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Iris.Serialization.StringTypeFB}
 */
Iris.Serialization.StringPinFB.prototype.StringType = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {Iris.Serialization.StringTypeFB} */ (this.bb.readUint16(this.bb_pos + offset)) : Iris.Serialization.StringTypeFB.SimpleFB;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.StringPinFB.prototype.FileMask = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.StringPinFB.prototype.MaxChars = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.StringSliceFB=} obj
 * @returns {Iris.Serialization.StringSliceFB}
 */
Iris.Serialization.StringPinFB.prototype.Slices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? (obj || new Iris.Serialization.StringSliceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.StringPinFB.prototype.SlicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.StringPinFB.startStringPinFB = function(builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.StringPinFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.StringPinFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PatchOffset
 */
Iris.Serialization.StringPinFB.addPatch = function(builder, PatchOffset) {
  builder.addFieldOffset(2, PatchOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TagsOffset
 */
Iris.Serialization.StringPinFB.addTags = function(builder, TagsOffset) {
  builder.addFieldOffset(3, TagsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StringPinFB.createTagsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.StringPinFB.startTagsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Iris.Serialization.StringTypeFB} StringType
 */
Iris.Serialization.StringPinFB.addStringType = function(builder, StringType) {
  builder.addFieldInt16(4, StringType, Iris.Serialization.StringTypeFB.SimpleFB);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} FileMaskOffset
 */
Iris.Serialization.StringPinFB.addFileMask = function(builder, FileMaskOffset) {
  builder.addFieldOffset(5, FileMaskOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MaxChars
 */
Iris.Serialization.StringPinFB.addMaxChars = function(builder, MaxChars) {
  builder.addFieldInt32(6, MaxChars, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SlicesOffset
 */
Iris.Serialization.StringPinFB.addSlices = function(builder, SlicesOffset) {
  builder.addFieldOffset(7, SlicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StringPinFB.createSlicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.StringPinFB.startSlicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StringPinFB.endStringPinFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.IntPinFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.IntPinFB}
 */
Iris.Serialization.IntPinFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.IntPinFB=} obj
 * @returns {Iris.Serialization.IntPinFB}
 */
Iris.Serialization.IntPinFB.getRootAsIntPinFB = function(bb, obj) {
  return (obj || new Iris.Serialization.IntPinFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.IntPinFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.IntPinFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.IntPinFB.prototype.Patch = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.IntPinFB.prototype.Tags = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.IntPinFB.prototype.TagsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.IntPinFB.prototype.VecSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.IntPinFB.prototype.Min = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.IntPinFB.prototype.Max = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.IntPinFB.prototype.Unit = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.IntSliceFB=} obj
 * @returns {Iris.Serialization.IntSliceFB}
 */
Iris.Serialization.IntPinFB.prototype.Slices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? (obj || new Iris.Serialization.IntSliceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.IntPinFB.prototype.SlicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.IntPinFB.startIntPinFB = function(builder) {
  builder.startObject(9);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.IntPinFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.IntPinFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PatchOffset
 */
Iris.Serialization.IntPinFB.addPatch = function(builder, PatchOffset) {
  builder.addFieldOffset(2, PatchOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TagsOffset
 */
Iris.Serialization.IntPinFB.addTags = function(builder, TagsOffset) {
  builder.addFieldOffset(3, TagsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.IntPinFB.createTagsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.IntPinFB.startTagsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} VecSize
 */
Iris.Serialization.IntPinFB.addVecSize = function(builder, VecSize) {
  builder.addFieldInt32(4, VecSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Min
 */
Iris.Serialization.IntPinFB.addMin = function(builder, Min) {
  builder.addFieldInt32(5, Min, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Max
 */
Iris.Serialization.IntPinFB.addMax = function(builder, Max) {
  builder.addFieldInt32(6, Max, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} UnitOffset
 */
Iris.Serialization.IntPinFB.addUnit = function(builder, UnitOffset) {
  builder.addFieldOffset(7, UnitOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SlicesOffset
 */
Iris.Serialization.IntPinFB.addSlices = function(builder, SlicesOffset) {
  builder.addFieldOffset(8, SlicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.IntPinFB.createSlicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.IntPinFB.startSlicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.IntPinFB.endIntPinFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.FloatPinFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.FloatPinFB}
 */
Iris.Serialization.FloatPinFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.FloatPinFB=} obj
 * @returns {Iris.Serialization.FloatPinFB}
 */
Iris.Serialization.FloatPinFB.getRootAsFloatPinFB = function(bb, obj) {
  return (obj || new Iris.Serialization.FloatPinFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.FloatPinFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.FloatPinFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.FloatPinFB.prototype.Patch = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.FloatPinFB.prototype.Tags = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.FloatPinFB.prototype.TagsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.FloatPinFB.prototype.VecSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.FloatPinFB.prototype.Min = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.FloatPinFB.prototype.Max = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.FloatPinFB.prototype.Unit = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.FloatPinFB.prototype.Precision = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.FloatSliceFB=} obj
 * @returns {Iris.Serialization.FloatSliceFB}
 */
Iris.Serialization.FloatPinFB.prototype.Slices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? (obj || new Iris.Serialization.FloatSliceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.FloatPinFB.prototype.SlicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.FloatPinFB.startFloatPinFB = function(builder) {
  builder.startObject(10);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.FloatPinFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.FloatPinFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PatchOffset
 */
Iris.Serialization.FloatPinFB.addPatch = function(builder, PatchOffset) {
  builder.addFieldOffset(2, PatchOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TagsOffset
 */
Iris.Serialization.FloatPinFB.addTags = function(builder, TagsOffset) {
  builder.addFieldOffset(3, TagsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.FloatPinFB.createTagsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.FloatPinFB.startTagsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} VecSize
 */
Iris.Serialization.FloatPinFB.addVecSize = function(builder, VecSize) {
  builder.addFieldInt32(4, VecSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Min
 */
Iris.Serialization.FloatPinFB.addMin = function(builder, Min) {
  builder.addFieldInt32(5, Min, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Max
 */
Iris.Serialization.FloatPinFB.addMax = function(builder, Max) {
  builder.addFieldInt32(6, Max, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} UnitOffset
 */
Iris.Serialization.FloatPinFB.addUnit = function(builder, UnitOffset) {
  builder.addFieldOffset(7, UnitOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Precision
 */
Iris.Serialization.FloatPinFB.addPrecision = function(builder, Precision) {
  builder.addFieldInt32(8, Precision, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SlicesOffset
 */
Iris.Serialization.FloatPinFB.addSlices = function(builder, SlicesOffset) {
  builder.addFieldOffset(9, SlicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.FloatPinFB.createSlicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.FloatPinFB.startSlicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.FloatPinFB.endFloatPinFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.DoublePinFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.DoublePinFB}
 */
Iris.Serialization.DoublePinFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.DoublePinFB=} obj
 * @returns {Iris.Serialization.DoublePinFB}
 */
Iris.Serialization.DoublePinFB.getRootAsDoublePinFB = function(bb, obj) {
  return (obj || new Iris.Serialization.DoublePinFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DoublePinFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DoublePinFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DoublePinFB.prototype.Patch = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DoublePinFB.prototype.Tags = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.DoublePinFB.prototype.TagsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.DoublePinFB.prototype.VecSize = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.DoublePinFB.prototype.Min = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.DoublePinFB.prototype.Max = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DoublePinFB.prototype.Unit = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.DoublePinFB.prototype.Precision = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.DoubleSliceFB=} obj
 * @returns {Iris.Serialization.DoubleSliceFB}
 */
Iris.Serialization.DoublePinFB.prototype.Slices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? (obj || new Iris.Serialization.DoubleSliceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.DoublePinFB.prototype.SlicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.DoublePinFB.startDoublePinFB = function(builder) {
  builder.startObject(10);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.DoublePinFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.DoublePinFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PatchOffset
 */
Iris.Serialization.DoublePinFB.addPatch = function(builder, PatchOffset) {
  builder.addFieldOffset(2, PatchOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TagsOffset
 */
Iris.Serialization.DoublePinFB.addTags = function(builder, TagsOffset) {
  builder.addFieldOffset(3, TagsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.DoublePinFB.createTagsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.DoublePinFB.startTagsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} VecSize
 */
Iris.Serialization.DoublePinFB.addVecSize = function(builder, VecSize) {
  builder.addFieldInt32(4, VecSize, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Min
 */
Iris.Serialization.DoublePinFB.addMin = function(builder, Min) {
  builder.addFieldInt32(5, Min, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Max
 */
Iris.Serialization.DoublePinFB.addMax = function(builder, Max) {
  builder.addFieldInt32(6, Max, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} UnitOffset
 */
Iris.Serialization.DoublePinFB.addUnit = function(builder, UnitOffset) {
  builder.addFieldOffset(7, UnitOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Precision
 */
Iris.Serialization.DoublePinFB.addPrecision = function(builder, Precision) {
  builder.addFieldInt32(8, Precision, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SlicesOffset
 */
Iris.Serialization.DoublePinFB.addSlices = function(builder, SlicesOffset) {
  builder.addFieldOffset(9, SlicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.DoublePinFB.createSlicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.DoublePinFB.startSlicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.DoublePinFB.endDoublePinFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.BoolPinFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.BoolPinFB}
 */
Iris.Serialization.BoolPinFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.BoolPinFB=} obj
 * @returns {Iris.Serialization.BoolPinFB}
 */
Iris.Serialization.BoolPinFB.getRootAsBoolPinFB = function(bb, obj) {
  return (obj || new Iris.Serialization.BoolPinFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.BoolPinFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.BoolPinFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.BoolPinFB.prototype.Patch = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.BoolPinFB.prototype.Tags = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.BoolPinFB.prototype.TagsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Iris.Serialization.BehaviorFB}
 */
Iris.Serialization.BoolPinFB.prototype.Behavior = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {Iris.Serialization.BehaviorFB} */ (this.bb.readUint16(this.bb_pos + offset)) : Iris.Serialization.BehaviorFB.ToggleFB;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.BoolSliceFB=} obj
 * @returns {Iris.Serialization.BoolSliceFB}
 */
Iris.Serialization.BoolPinFB.prototype.Slices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new Iris.Serialization.BoolSliceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.BoolPinFB.prototype.SlicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.BoolPinFB.startBoolPinFB = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.BoolPinFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.BoolPinFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PatchOffset
 */
Iris.Serialization.BoolPinFB.addPatch = function(builder, PatchOffset) {
  builder.addFieldOffset(2, PatchOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TagsOffset
 */
Iris.Serialization.BoolPinFB.addTags = function(builder, TagsOffset) {
  builder.addFieldOffset(3, TagsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.BoolPinFB.createTagsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.BoolPinFB.startTagsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Iris.Serialization.BehaviorFB} Behavior
 */
Iris.Serialization.BoolPinFB.addBehavior = function(builder, Behavior) {
  builder.addFieldInt16(4, Behavior, Iris.Serialization.BehaviorFB.ToggleFB);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SlicesOffset
 */
Iris.Serialization.BoolPinFB.addSlices = function(builder, SlicesOffset) {
  builder.addFieldOffset(5, SlicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.BoolPinFB.createSlicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.BoolPinFB.startSlicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.BoolPinFB.endBoolPinFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.BytePinFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.BytePinFB}
 */
Iris.Serialization.BytePinFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.BytePinFB=} obj
 * @returns {Iris.Serialization.BytePinFB}
 */
Iris.Serialization.BytePinFB.getRootAsBytePinFB = function(bb, obj) {
  return (obj || new Iris.Serialization.BytePinFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.BytePinFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.BytePinFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.BytePinFB.prototype.Patch = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.BytePinFB.prototype.Tags = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.BytePinFB.prototype.TagsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.ByteSliceFB=} obj
 * @returns {Iris.Serialization.ByteSliceFB}
 */
Iris.Serialization.BytePinFB.prototype.Slices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Iris.Serialization.ByteSliceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.BytePinFB.prototype.SlicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.BytePinFB.startBytePinFB = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.BytePinFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.BytePinFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PatchOffset
 */
Iris.Serialization.BytePinFB.addPatch = function(builder, PatchOffset) {
  builder.addFieldOffset(2, PatchOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TagsOffset
 */
Iris.Serialization.BytePinFB.addTags = function(builder, TagsOffset) {
  builder.addFieldOffset(3, TagsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.BytePinFB.createTagsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.BytePinFB.startTagsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SlicesOffset
 */
Iris.Serialization.BytePinFB.addSlices = function(builder, SlicesOffset) {
  builder.addFieldOffset(4, SlicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.BytePinFB.createSlicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.BytePinFB.startSlicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.BytePinFB.endBytePinFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.EnumPinFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.EnumPinFB}
 */
Iris.Serialization.EnumPinFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.EnumPinFB=} obj
 * @returns {Iris.Serialization.EnumPinFB}
 */
Iris.Serialization.EnumPinFB.getRootAsEnumPinFB = function(bb, obj) {
  return (obj || new Iris.Serialization.EnumPinFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.EnumPinFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.EnumPinFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.EnumPinFB.prototype.Patch = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.EnumPinFB.prototype.Tags = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.EnumPinFB.prototype.TagsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.EnumPropertyFB=} obj
 * @returns {Iris.Serialization.EnumPropertyFB}
 */
Iris.Serialization.EnumPinFB.prototype.Properties = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Iris.Serialization.EnumPropertyFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.EnumPinFB.prototype.PropertiesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.EnumSliceFB=} obj
 * @returns {Iris.Serialization.EnumSliceFB}
 */
Iris.Serialization.EnumPinFB.prototype.Slices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new Iris.Serialization.EnumSliceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.EnumPinFB.prototype.SlicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.EnumPinFB.startEnumPinFB = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.EnumPinFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.EnumPinFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PatchOffset
 */
Iris.Serialization.EnumPinFB.addPatch = function(builder, PatchOffset) {
  builder.addFieldOffset(2, PatchOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TagsOffset
 */
Iris.Serialization.EnumPinFB.addTags = function(builder, TagsOffset) {
  builder.addFieldOffset(3, TagsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.EnumPinFB.createTagsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.EnumPinFB.startTagsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PropertiesOffset
 */
Iris.Serialization.EnumPinFB.addProperties = function(builder, PropertiesOffset) {
  builder.addFieldOffset(4, PropertiesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.EnumPinFB.createPropertiesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.EnumPinFB.startPropertiesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SlicesOffset
 */
Iris.Serialization.EnumPinFB.addSlices = function(builder, SlicesOffset) {
  builder.addFieldOffset(5, SlicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.EnumPinFB.createSlicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.EnumPinFB.startSlicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.EnumPinFB.endEnumPinFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.ColorPinFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.ColorPinFB}
 */
Iris.Serialization.ColorPinFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.ColorPinFB=} obj
 * @returns {Iris.Serialization.ColorPinFB}
 */
Iris.Serialization.ColorPinFB.getRootAsColorPinFB = function(bb, obj) {
  return (obj || new Iris.Serialization.ColorPinFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ColorPinFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ColorPinFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ColorPinFB.prototype.Patch = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ColorPinFB.prototype.Tags = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.ColorPinFB.prototype.TagsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.ColorSliceFB=} obj
 * @returns {Iris.Serialization.ColorSliceFB}
 */
Iris.Serialization.ColorPinFB.prototype.Slices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Iris.Serialization.ColorSliceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.ColorPinFB.prototype.SlicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.ColorPinFB.startColorPinFB = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.ColorPinFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.ColorPinFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PatchOffset
 */
Iris.Serialization.ColorPinFB.addPatch = function(builder, PatchOffset) {
  builder.addFieldOffset(2, PatchOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TagsOffset
 */
Iris.Serialization.ColorPinFB.addTags = function(builder, TagsOffset) {
  builder.addFieldOffset(3, TagsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ColorPinFB.createTagsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.ColorPinFB.startTagsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SlicesOffset
 */
Iris.Serialization.ColorPinFB.addSlices = function(builder, SlicesOffset) {
  builder.addFieldOffset(4, SlicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ColorPinFB.createSlicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.ColorPinFB.startSlicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ColorPinFB.endColorPinFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.CompoundPinFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.CompoundPinFB}
 */
Iris.Serialization.CompoundPinFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.CompoundPinFB=} obj
 * @returns {Iris.Serialization.CompoundPinFB}
 */
Iris.Serialization.CompoundPinFB.getRootAsCompoundPinFB = function(bb, obj) {
  return (obj || new Iris.Serialization.CompoundPinFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.CompoundPinFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.CompoundPinFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.CompoundPinFB.prototype.Patch = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.CompoundPinFB.prototype.Tags = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.CompoundPinFB.prototype.TagsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.CompoundSliceFB=} obj
 * @returns {Iris.Serialization.CompoundSliceFB}
 */
Iris.Serialization.CompoundPinFB.prototype.Slices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Iris.Serialization.CompoundSliceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.CompoundPinFB.prototype.SlicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.CompoundPinFB.startCompoundPinFB = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.CompoundPinFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.CompoundPinFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PatchOffset
 */
Iris.Serialization.CompoundPinFB.addPatch = function(builder, PatchOffset) {
  builder.addFieldOffset(2, PatchOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TagsOffset
 */
Iris.Serialization.CompoundPinFB.addTags = function(builder, TagsOffset) {
  builder.addFieldOffset(3, TagsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.CompoundPinFB.createTagsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.CompoundPinFB.startTagsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SlicesOffset
 */
Iris.Serialization.CompoundPinFB.addSlices = function(builder, SlicesOffset) {
  builder.addFieldOffset(4, SlicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.CompoundPinFB.createSlicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.CompoundPinFB.startSlicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.CompoundPinFB.endCompoundPinFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.PinFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.PinFB}
 */
Iris.Serialization.PinFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.PinFB=} obj
 * @returns {Iris.Serialization.PinFB}
 */
Iris.Serialization.PinFB.getRootAsPinFB = function(bb, obj) {
  return (obj || new Iris.Serialization.PinFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Iris.Serialization.PinTypeFB}
 */
Iris.Serialization.PinFB.prototype.PinType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Iris.Serialization.PinTypeFB} */ (this.bb.readUint8(this.bb_pos + offset)) : Iris.Serialization.PinTypeFB.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Iris.Serialization.PinFB.prototype.Pin = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.PinFB.startPinFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Iris.Serialization.PinTypeFB} PinType
 */
Iris.Serialization.PinFB.addPinType = function(builder, PinType) {
  builder.addFieldInt8(0, PinType, Iris.Serialization.PinTypeFB.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PinOffset
 */
Iris.Serialization.PinFB.addPin = function(builder, PinOffset) {
  builder.addFieldOffset(1, PinOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.PinFB.endPinFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.PatchFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.PatchFB}
 */
Iris.Serialization.PatchFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.PatchFB=} obj
 * @returns {Iris.Serialization.PatchFB}
 */
Iris.Serialization.PatchFB.getRootAsPatchFB = function(bb, obj) {
  return (obj || new Iris.Serialization.PatchFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.PatchFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.PatchFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.PinFB=} obj
 * @returns {Iris.Serialization.PinFB}
 */
Iris.Serialization.PatchFB.prototype.Pins = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Iris.Serialization.PinFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.PatchFB.prototype.PinsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.PatchFB.startPatchFB = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.PatchFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.PatchFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PinsOffset
 */
Iris.Serialization.PatchFB.addPins = function(builder, PinsOffset) {
  builder.addFieldOffset(2, PinsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.PatchFB.createPinsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.PatchFB.startPinsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.PatchFB.endPatchFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.CueFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.CueFB}
 */
Iris.Serialization.CueFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.CueFB=} obj
 * @returns {Iris.Serialization.CueFB}
 */
Iris.Serialization.CueFB.getRootAsCueFB = function(bb, obj) {
  return (obj || new Iris.Serialization.CueFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.CueFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.CueFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.PinFB=} obj
 * @returns {Iris.Serialization.PinFB}
 */
Iris.Serialization.CueFB.prototype.Pins = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Iris.Serialization.PinFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.CueFB.prototype.PinsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.CueFB.startCueFB = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.CueFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.CueFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PinsOffset
 */
Iris.Serialization.CueFB.addPins = function(builder, PinsOffset) {
  builder.addFieldOffset(2, PinsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.CueFB.createPinsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.CueFB.startPinsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.CueFB.endCueFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.CueListFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.CueListFB}
 */
Iris.Serialization.CueListFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.CueListFB=} obj
 * @returns {Iris.Serialization.CueListFB}
 */
Iris.Serialization.CueListFB.getRootAsCueListFB = function(bb, obj) {
  return (obj || new Iris.Serialization.CueListFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.CueListFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.CueListFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.CueFB=} obj
 * @returns {Iris.Serialization.CueFB}
 */
Iris.Serialization.CueListFB.prototype.Cues = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Iris.Serialization.CueFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.CueListFB.prototype.CuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.CueListFB.startCueListFB = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.CueListFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.CueListFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} CuesOffset
 */
Iris.Serialization.CueListFB.addCues = function(builder, CuesOffset) {
  builder.addFieldOffset(2, CuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.CueListFB.createCuesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.CueListFB.startCuesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.CueListFB.endCueListFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.UserFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.UserFB}
 */
Iris.Serialization.UserFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.UserFB=} obj
 * @returns {Iris.Serialization.UserFB}
 */
Iris.Serialization.UserFB.getRootAsUserFB = function(bb, obj) {
  return (obj || new Iris.Serialization.UserFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.UserFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.UserFB.prototype.UserName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.UserFB.prototype.FirstName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.UserFB.prototype.LastName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.UserFB.prototype.Email = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.UserFB.prototype.Password = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.UserFB.prototype.Salt = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.UserFB.prototype.Joined = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.UserFB.prototype.Created = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.UserFB.startUserFB = function(builder) {
  builder.startObject(9);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.UserFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} UserNameOffset
 */
Iris.Serialization.UserFB.addUserName = function(builder, UserNameOffset) {
  builder.addFieldOffset(1, UserNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} FirstNameOffset
 */
Iris.Serialization.UserFB.addFirstName = function(builder, FirstNameOffset) {
  builder.addFieldOffset(2, FirstNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} LastNameOffset
 */
Iris.Serialization.UserFB.addLastName = function(builder, LastNameOffset) {
  builder.addFieldOffset(3, LastNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} EmailOffset
 */
Iris.Serialization.UserFB.addEmail = function(builder, EmailOffset) {
  builder.addFieldOffset(4, EmailOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PasswordOffset
 */
Iris.Serialization.UserFB.addPassword = function(builder, PasswordOffset) {
  builder.addFieldOffset(5, PasswordOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SaltOffset
 */
Iris.Serialization.UserFB.addSalt = function(builder, SaltOffset) {
  builder.addFieldOffset(6, SaltOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} JoinedOffset
 */
Iris.Serialization.UserFB.addJoined = function(builder, JoinedOffset) {
  builder.addFieldOffset(7, JoinedOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} CreatedOffset
 */
Iris.Serialization.UserFB.addCreated = function(builder, CreatedOffset) {
  builder.addFieldOffset(8, CreatedOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.UserFB.endUserFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.SessionFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.SessionFB}
 */
Iris.Serialization.SessionFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.SessionFB=} obj
 * @returns {Iris.Serialization.SessionFB}
 */
Iris.Serialization.SessionFB.getRootAsSessionFB = function(bb, obj) {
  return (obj || new Iris.Serialization.SessionFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.SessionFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.SessionFB.prototype.IpAddress = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.SessionFB.prototype.UserAgent = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.SessionFB.startSessionFB = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.SessionFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IpAddressOffset
 */
Iris.Serialization.SessionFB.addIpAddress = function(builder, IpAddressOffset) {
  builder.addFieldOffset(1, IpAddressOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} UserAgentOffset
 */
Iris.Serialization.SessionFB.addUserAgent = function(builder, UserAgentOffset) {
  builder.addFieldOffset(2, UserAgentOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.SessionFB.endSessionFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.RaftMemberFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.RaftMemberFB}
 */
Iris.Serialization.RaftMemberFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.RaftMemberFB=} obj
 * @returns {Iris.Serialization.RaftMemberFB}
 */
Iris.Serialization.RaftMemberFB.getRootAsRaftMemberFB = function(bb, obj) {
  return (obj || new Iris.Serialization.RaftMemberFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.RaftMemberFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.RaftMemberFB.prototype.HostName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.RaftMemberFB.prototype.IpAddr = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftMemberFB.prototype.Port = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftMemberFB.prototype.WsPort = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftMemberFB.prototype.GitPort = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftMemberFB.prototype.ApiPort = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {boolean}
 */
Iris.Serialization.RaftMemberFB.prototype.Voting = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {boolean}
 */
Iris.Serialization.RaftMemberFB.prototype.VotedForMe = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {Iris.Serialization.RaftMemberStateFB}
 */
Iris.Serialization.RaftMemberFB.prototype.State = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? /** @type {Iris.Serialization.RaftMemberStateFB} */ (this.bb.readUint8(this.bb_pos + offset)) : Iris.Serialization.RaftMemberStateFB.JoiningFB;
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftMemberFB.prototype.NextIndex = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftMemberFB.prototype.MatchIndex = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.RaftMemberFB.startRaftMemberFB = function(builder) {
  builder.startObject(12);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.RaftMemberFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} HostNameOffset
 */
Iris.Serialization.RaftMemberFB.addHostName = function(builder, HostNameOffset) {
  builder.addFieldOffset(1, HostNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IpAddrOffset
 */
Iris.Serialization.RaftMemberFB.addIpAddr = function(builder, IpAddrOffset) {
  builder.addFieldOffset(2, IpAddrOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Port
 */
Iris.Serialization.RaftMemberFB.addPort = function(builder, Port) {
  builder.addFieldInt16(3, Port, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} WsPort
 */
Iris.Serialization.RaftMemberFB.addWsPort = function(builder, WsPort) {
  builder.addFieldInt16(4, WsPort, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} GitPort
 */
Iris.Serialization.RaftMemberFB.addGitPort = function(builder, GitPort) {
  builder.addFieldInt16(5, GitPort, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ApiPort
 */
Iris.Serialization.RaftMemberFB.addApiPort = function(builder, ApiPort) {
  builder.addFieldInt16(6, ApiPort, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} Voting
 */
Iris.Serialization.RaftMemberFB.addVoting = function(builder, Voting) {
  builder.addFieldInt8(7, +Voting, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} VotedForMe
 */
Iris.Serialization.RaftMemberFB.addVotedForMe = function(builder, VotedForMe) {
  builder.addFieldInt8(8, +VotedForMe, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Iris.Serialization.RaftMemberStateFB} State
 */
Iris.Serialization.RaftMemberFB.addState = function(builder, State) {
  builder.addFieldInt8(9, State, Iris.Serialization.RaftMemberStateFB.JoiningFB);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} NextIndex
 */
Iris.Serialization.RaftMemberFB.addNextIndex = function(builder, NextIndex) {
  builder.addFieldInt32(10, NextIndex, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MatchIndex
 */
Iris.Serialization.RaftMemberFB.addMatchIndex = function(builder, MatchIndex) {
  builder.addFieldInt32(11, MatchIndex, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.RaftMemberFB.endRaftMemberFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.AudioConfigFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.AudioConfigFB}
 */
Iris.Serialization.AudioConfigFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.AudioConfigFB=} obj
 * @returns {Iris.Serialization.AudioConfigFB}
 */
Iris.Serialization.AudioConfigFB.getRootAsAudioConfigFB = function(bb, obj) {
  return (obj || new Iris.Serialization.AudioConfigFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.AudioConfigFB.prototype.SampleRate = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.AudioConfigFB.startAudioConfigFB = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SampleRate
 */
Iris.Serialization.AudioConfigFB.addSampleRate = function(builder, SampleRate) {
  builder.addFieldInt32(0, SampleRate, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.AudioConfigFB.endAudioConfigFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.VvvvExeFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.VvvvExeFB}
 */
Iris.Serialization.VvvvExeFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.VvvvExeFB=} obj
 * @returns {Iris.Serialization.VvvvExeFB}
 */
Iris.Serialization.VvvvExeFB.getRootAsVvvvExeFB = function(bb, obj) {
  return (obj || new Iris.Serialization.VvvvExeFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.VvvvExeFB.prototype.Executable = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.VvvvExeFB.prototype.Version = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
Iris.Serialization.VvvvExeFB.prototype.Required = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.VvvvExeFB.startVvvvExeFB = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ExecutableOffset
 */
Iris.Serialization.VvvvExeFB.addExecutable = function(builder, ExecutableOffset) {
  builder.addFieldOffset(0, ExecutableOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} VersionOffset
 */
Iris.Serialization.VvvvExeFB.addVersion = function(builder, VersionOffset) {
  builder.addFieldOffset(1, VersionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} Required
 */
Iris.Serialization.VvvvExeFB.addRequired = function(builder, Required) {
  builder.addFieldInt8(2, +Required, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.VvvvExeFB.endVvvvExeFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.VvvvPluginFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.VvvvPluginFB}
 */
Iris.Serialization.VvvvPluginFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.VvvvPluginFB=} obj
 * @returns {Iris.Serialization.VvvvPluginFB}
 */
Iris.Serialization.VvvvPluginFB.getRootAsVvvvPluginFB = function(bb, obj) {
  return (obj || new Iris.Serialization.VvvvPluginFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.VvvvPluginFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.VvvvPluginFB.prototype.Path = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.VvvvPluginFB.startVvvvPluginFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.VvvvPluginFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(0, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PathOffset
 */
Iris.Serialization.VvvvPluginFB.addPath = function(builder, PathOffset) {
  builder.addFieldOffset(1, PathOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.VvvvPluginFB.endVvvvPluginFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.VvvvConfigFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.VvvvConfigFB}
 */
Iris.Serialization.VvvvConfigFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.VvvvConfigFB=} obj
 * @returns {Iris.Serialization.VvvvConfigFB}
 */
Iris.Serialization.VvvvConfigFB.getRootAsVvvvConfigFB = function(bb, obj) {
  return (obj || new Iris.Serialization.VvvvConfigFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Iris.Serialization.VvvvExeFB=} obj
 * @returns {Iris.Serialization.VvvvExeFB}
 */
Iris.Serialization.VvvvConfigFB.prototype.Executables = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Iris.Serialization.VvvvExeFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.VvvvConfigFB.prototype.ExecutablesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.VvvvPluginFB=} obj
 * @returns {Iris.Serialization.VvvvPluginFB}
 */
Iris.Serialization.VvvvConfigFB.prototype.Plugins = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Iris.Serialization.VvvvPluginFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.VvvvConfigFB.prototype.PluginsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.VvvvConfigFB.startVvvvConfigFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ExecutablesOffset
 */
Iris.Serialization.VvvvConfigFB.addExecutables = function(builder, ExecutablesOffset) {
  builder.addFieldOffset(0, ExecutablesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.VvvvConfigFB.createExecutablesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.VvvvConfigFB.startExecutablesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PluginsOffset
 */
Iris.Serialization.VvvvConfigFB.addPlugins = function(builder, PluginsOffset) {
  builder.addFieldOffset(1, PluginsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.VvvvConfigFB.createPluginsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.VvvvConfigFB.startPluginsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.VvvvConfigFB.endVvvvConfigFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.RaftConfigFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.RaftConfigFB}
 */
Iris.Serialization.RaftConfigFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.RaftConfigFB=} obj
 * @returns {Iris.Serialization.RaftConfigFB}
 */
Iris.Serialization.RaftConfigFB.getRootAsRaftConfigFB = function(bb, obj) {
  return (obj || new Iris.Serialization.RaftConfigFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftConfigFB.prototype.RequestTimeout = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftConfigFB.prototype.ElectionTimeout = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftConfigFB.prototype.MaxLogDepth = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.RaftConfigFB.prototype.LogLevel = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.RaftConfigFB.prototype.DataDir = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftConfigFB.prototype.MaxRetries = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RaftConfigFB.prototype.PeriodicInterval = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.RaftConfigFB.startRaftConfigFB = function(builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} RequestTimeout
 */
Iris.Serialization.RaftConfigFB.addRequestTimeout = function(builder, RequestTimeout) {
  builder.addFieldInt32(0, RequestTimeout, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ElectionTimeout
 */
Iris.Serialization.RaftConfigFB.addElectionTimeout = function(builder, ElectionTimeout) {
  builder.addFieldInt32(1, ElectionTimeout, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MaxLogDepth
 */
Iris.Serialization.RaftConfigFB.addMaxLogDepth = function(builder, MaxLogDepth) {
  builder.addFieldInt32(2, MaxLogDepth, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} LogLevelOffset
 */
Iris.Serialization.RaftConfigFB.addLogLevel = function(builder, LogLevelOffset) {
  builder.addFieldOffset(3, LogLevelOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} DataDirOffset
 */
Iris.Serialization.RaftConfigFB.addDataDir = function(builder, DataDirOffset) {
  builder.addFieldOffset(4, DataDirOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} MaxRetries
 */
Iris.Serialization.RaftConfigFB.addMaxRetries = function(builder, MaxRetries) {
  builder.addFieldInt16(5, MaxRetries, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} PeriodicInterval
 */
Iris.Serialization.RaftConfigFB.addPeriodicInterval = function(builder, PeriodicInterval) {
  builder.addFieldInt16(6, PeriodicInterval, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.RaftConfigFB.endRaftConfigFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.TimingConfigFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.TimingConfigFB}
 */
Iris.Serialization.TimingConfigFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.TimingConfigFB=} obj
 * @returns {Iris.Serialization.TimingConfigFB}
 */
Iris.Serialization.TimingConfigFB.getRootAsTimingConfigFB = function(bb, obj) {
  return (obj || new Iris.Serialization.TimingConfigFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.TimingConfigFB.prototype.Framebase = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.TimingConfigFB.prototype.Input = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.TimingConfigFB.prototype.Servers = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.TimingConfigFB.prototype.ServersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.TimingConfigFB.prototype.UDPPort = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.TimingConfigFB.prototype.TCPPort = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.TimingConfigFB.startTimingConfigFB = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} Framebase
 */
Iris.Serialization.TimingConfigFB.addFramebase = function(builder, Framebase) {
  builder.addFieldInt32(0, Framebase, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} InputOffset
 */
Iris.Serialization.TimingConfigFB.addInput = function(builder, InputOffset) {
  builder.addFieldOffset(1, InputOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ServersOffset
 */
Iris.Serialization.TimingConfigFB.addServers = function(builder, ServersOffset) {
  builder.addFieldOffset(2, ServersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.TimingConfigFB.createServersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.TimingConfigFB.startServersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} UDPPort
 */
Iris.Serialization.TimingConfigFB.addUDPPort = function(builder, UDPPort) {
  builder.addFieldInt32(3, UDPPort, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} TCPPort
 */
Iris.Serialization.TimingConfigFB.addTCPPort = function(builder, TCPPort) {
  builder.addFieldInt32(4, TCPPort, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.TimingConfigFB.endTimingConfigFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.HostGroupFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.HostGroupFB}
 */
Iris.Serialization.HostGroupFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.HostGroupFB=} obj
 * @returns {Iris.Serialization.HostGroupFB}
 */
Iris.Serialization.HostGroupFB.getRootAsHostGroupFB = function(bb, obj) {
  return (obj || new Iris.Serialization.HostGroupFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.HostGroupFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.HostGroupFB.prototype.Members = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.HostGroupFB.prototype.MembersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.HostGroupFB.startHostGroupFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.HostGroupFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(0, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MembersOffset
 */
Iris.Serialization.HostGroupFB.addMembers = function(builder, MembersOffset) {
  builder.addFieldOffset(1, MembersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.HostGroupFB.createMembersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.HostGroupFB.startMembersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.HostGroupFB.endHostGroupFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.ClusterConfigFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.ClusterConfigFB}
 */
Iris.Serialization.ClusterConfigFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.ClusterConfigFB=} obj
 * @returns {Iris.Serialization.ClusterConfigFB}
 */
Iris.Serialization.ClusterConfigFB.getRootAsClusterConfigFB = function(bb, obj) {
  return (obj || new Iris.Serialization.ClusterConfigFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ClusterConfigFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.RaftMemberFB=} obj
 * @returns {Iris.Serialization.RaftMemberFB}
 */
Iris.Serialization.ClusterConfigFB.prototype.Members = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Iris.Serialization.RaftMemberFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.ClusterConfigFB.prototype.MembersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.HostGroupFB=} obj
 * @returns {Iris.Serialization.HostGroupFB}
 */
Iris.Serialization.ClusterConfigFB.prototype.Groups = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Iris.Serialization.HostGroupFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.ClusterConfigFB.prototype.GroupsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.ClusterConfigFB.startClusterConfigFB = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.ClusterConfigFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(0, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MembersOffset
 */
Iris.Serialization.ClusterConfigFB.addMembers = function(builder, MembersOffset) {
  builder.addFieldOffset(1, MembersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ClusterConfigFB.createMembersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.ClusterConfigFB.startMembersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} GroupsOffset
 */
Iris.Serialization.ClusterConfigFB.addGroups = function(builder, GroupsOffset) {
  builder.addFieldOffset(2, GroupsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ClusterConfigFB.createGroupsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.ClusterConfigFB.startGroupsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ClusterConfigFB.endClusterConfigFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.ViewPortFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.ViewPortFB}
 */
Iris.Serialization.ViewPortFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.ViewPortFB=} obj
 * @returns {Iris.Serialization.ViewPortFB}
 */
Iris.Serialization.ViewPortFB.getRootAsViewPortFB = function(bb, obj) {
  return (obj || new Iris.Serialization.ViewPortFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ViewPortFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ViewPortFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.ViewPortFB.prototype.PositionX = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.ViewPortFB.prototype.PositionY = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.ViewPortFB.prototype.SizeX = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.ViewPortFB.prototype.SizeY = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.ViewPortFB.prototype.OutputPositionX = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.ViewPortFB.prototype.OutputPositionY = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.ViewPortFB.prototype.OutputSizeX = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.ViewPortFB.prototype.OutputSizeY = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.ViewPortFB.prototype.OverlapX = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.ViewPortFB.prototype.OverlapY = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ViewPortFB.prototype.Description = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.ViewPortFB.startViewPortFB = function(builder) {
  builder.startObject(13);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.ViewPortFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.ViewPortFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} PositionX
 */
Iris.Serialization.ViewPortFB.addPositionX = function(builder, PositionX) {
  builder.addFieldInt32(2, PositionX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} PositionY
 */
Iris.Serialization.ViewPortFB.addPositionY = function(builder, PositionY) {
  builder.addFieldInt32(3, PositionY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SizeX
 */
Iris.Serialization.ViewPortFB.addSizeX = function(builder, SizeX) {
  builder.addFieldInt32(4, SizeX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SizeY
 */
Iris.Serialization.ViewPortFB.addSizeY = function(builder, SizeY) {
  builder.addFieldInt32(5, SizeY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutputPositionX
 */
Iris.Serialization.ViewPortFB.addOutputPositionX = function(builder, OutputPositionX) {
  builder.addFieldInt32(6, OutputPositionX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutputPositionY
 */
Iris.Serialization.ViewPortFB.addOutputPositionY = function(builder, OutputPositionY) {
  builder.addFieldInt32(7, OutputPositionY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutputSizeX
 */
Iris.Serialization.ViewPortFB.addOutputSizeX = function(builder, OutputSizeX) {
  builder.addFieldInt32(8, OutputSizeX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutputSizeY
 */
Iris.Serialization.ViewPortFB.addOutputSizeY = function(builder, OutputSizeY) {
  builder.addFieldInt32(9, OutputSizeY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OverlapX
 */
Iris.Serialization.ViewPortFB.addOverlapX = function(builder, OverlapX) {
  builder.addFieldInt32(10, OverlapX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OverlapY
 */
Iris.Serialization.ViewPortFB.addOverlapY = function(builder, OverlapY) {
  builder.addFieldInt32(11, OverlapY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} DescriptionOffset
 */
Iris.Serialization.ViewPortFB.addDescription = function(builder, DescriptionOffset) {
  builder.addFieldOffset(12, DescriptionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ViewPortFB.endViewPortFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.TaskFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.TaskFB}
 */
Iris.Serialization.TaskFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.TaskFB=} obj
 * @returns {Iris.Serialization.TaskFB}
 */
Iris.Serialization.TaskFB.getRootAsTaskFB = function(bb, obj) {
  return (obj || new Iris.Serialization.TaskFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.TaskFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.TaskFB.prototype.Description = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.TaskFB.prototype.DisplayId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.TaskFB.prototype.AudioStream = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.TaskFB.prototype.Arguments = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.TaskFB.prototype.ArgumentsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.TaskFB.startTaskFB = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.TaskFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} DescriptionOffset
 */
Iris.Serialization.TaskFB.addDescription = function(builder, DescriptionOffset) {
  builder.addFieldOffset(1, DescriptionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} DisplayIdOffset
 */
Iris.Serialization.TaskFB.addDisplayId = function(builder, DisplayIdOffset) {
  builder.addFieldOffset(2, DisplayIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} AudioStreamOffset
 */
Iris.Serialization.TaskFB.addAudioStream = function(builder, AudioStreamOffset) {
  builder.addFieldOffset(3, AudioStreamOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ArgumentsOffset
 */
Iris.Serialization.TaskFB.addArguments = function(builder, ArgumentsOffset) {
  builder.addFieldOffset(4, ArgumentsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.TaskFB.createArgumentsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.TaskFB.startArgumentsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.TaskFB.endTaskFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.SignalFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.SignalFB}
 */
Iris.Serialization.SignalFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.SignalFB=} obj
 * @returns {Iris.Serialization.SignalFB}
 */
Iris.Serialization.SignalFB.getRootAsSignalFB = function(bb, obj) {
  return (obj || new Iris.Serialization.SignalFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Iris.Serialization.SignalFB.prototype.SizeX = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.SignalFB.prototype.SizeY = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.SignalFB.prototype.PositionX = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.SignalFB.prototype.PositionY = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.SignalFB.startSignalFB = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SizeX
 */
Iris.Serialization.SignalFB.addSizeX = function(builder, SizeX) {
  builder.addFieldInt32(0, SizeX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SizeY
 */
Iris.Serialization.SignalFB.addSizeY = function(builder, SizeY) {
  builder.addFieldInt32(1, SizeY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} PositionX
 */
Iris.Serialization.SignalFB.addPositionX = function(builder, PositionX) {
  builder.addFieldInt32(2, PositionX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} PositionY
 */
Iris.Serialization.SignalFB.addPositionY = function(builder, PositionY) {
  builder.addFieldInt32(3, PositionY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.SignalFB.endSignalFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.RegionFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.RegionFB}
 */
Iris.Serialization.RegionFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.RegionFB=} obj
 * @returns {Iris.Serialization.RegionFB}
 */
Iris.Serialization.RegionFB.getRootAsRegionFB = function(bb, obj) {
  return (obj || new Iris.Serialization.RegionFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.RegionFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.RegionFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.RegionFB.prototype.SrcPositionX = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RegionFB.prototype.SrcPositionY = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RegionFB.prototype.SrcSizeX = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RegionFB.prototype.SrcSizeY = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RegionFB.prototype.OutputPositionX = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RegionFB.prototype.OutputPositionY = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RegionFB.prototype.OutputSizeX = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.RegionFB.prototype.OutputSizeY = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.RegionFB.startRegionFB = function(builder) {
  builder.startObject(10);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.RegionFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.RegionFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SrcPositionX
 */
Iris.Serialization.RegionFB.addSrcPositionX = function(builder, SrcPositionX) {
  builder.addFieldInt32(2, SrcPositionX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SrcPositionY
 */
Iris.Serialization.RegionFB.addSrcPositionY = function(builder, SrcPositionY) {
  builder.addFieldInt32(3, SrcPositionY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SrcSizeX
 */
Iris.Serialization.RegionFB.addSrcSizeX = function(builder, SrcSizeX) {
  builder.addFieldInt32(4, SrcSizeX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SrcSizeY
 */
Iris.Serialization.RegionFB.addSrcSizeY = function(builder, SrcSizeY) {
  builder.addFieldInt32(5, SrcSizeY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutputPositionX
 */
Iris.Serialization.RegionFB.addOutputPositionX = function(builder, OutputPositionX) {
  builder.addFieldInt32(6, OutputPositionX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutputPositionY
 */
Iris.Serialization.RegionFB.addOutputPositionY = function(builder, OutputPositionY) {
  builder.addFieldInt32(7, OutputPositionY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutputSizeX
 */
Iris.Serialization.RegionFB.addOutputSizeX = function(builder, OutputSizeX) {
  builder.addFieldInt32(8, OutputSizeX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} OutputSizeY
 */
Iris.Serialization.RegionFB.addOutputSizeY = function(builder, OutputSizeY) {
  builder.addFieldInt32(9, OutputSizeY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.RegionFB.endRegionFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.RegionMapFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.RegionMapFB}
 */
Iris.Serialization.RegionMapFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.RegionMapFB=} obj
 * @returns {Iris.Serialization.RegionMapFB}
 */
Iris.Serialization.RegionMapFB.getRootAsRegionMapFB = function(bb, obj) {
  return (obj || new Iris.Serialization.RegionMapFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.RegionMapFB.prototype.SrcViewportId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.RegionFB=} obj
 * @returns {Iris.Serialization.RegionFB}
 */
Iris.Serialization.RegionMapFB.prototype.Regions = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Iris.Serialization.RegionFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.RegionMapFB.prototype.RegionsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.RegionMapFB.startRegionMapFB = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SrcViewportIdOffset
 */
Iris.Serialization.RegionMapFB.addSrcViewportId = function(builder, SrcViewportIdOffset) {
  builder.addFieldOffset(0, SrcViewportIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} RegionsOffset
 */
Iris.Serialization.RegionMapFB.addRegions = function(builder, RegionsOffset) {
  builder.addFieldOffset(1, RegionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.RegionMapFB.createRegionsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.RegionMapFB.startRegionsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.RegionMapFB.endRegionMapFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.DisplayFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.DisplayFB}
 */
Iris.Serialization.DisplayFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.DisplayFB=} obj
 * @returns {Iris.Serialization.DisplayFB}
 */
Iris.Serialization.DisplayFB.getRootAsDisplayFB = function(bb, obj) {
  return (obj || new Iris.Serialization.DisplayFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DisplayFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.DisplayFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.DisplayFB.prototype.SizeX = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Iris.Serialization.DisplayFB.prototype.SizeY = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.SignalFB=} obj
 * @returns {Iris.Serialization.SignalFB}
 */
Iris.Serialization.DisplayFB.prototype.Signals = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Iris.Serialization.SignalFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.DisplayFB.prototype.SignalsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {Iris.Serialization.RegionMapFB=} obj
 * @returns {Iris.Serialization.RegionMapFB}
 */
Iris.Serialization.DisplayFB.prototype.RegionMap = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new Iris.Serialization.RegionMapFB).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.DisplayFB.startDisplayFB = function(builder) {
  builder.startObject(6);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.DisplayFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.DisplayFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SizeX
 */
Iris.Serialization.DisplayFB.addSizeX = function(builder, SizeX) {
  builder.addFieldInt32(2, SizeX, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} SizeY
 */
Iris.Serialization.DisplayFB.addSizeY = function(builder, SizeY) {
  builder.addFieldInt32(3, SizeY, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SignalsOffset
 */
Iris.Serialization.DisplayFB.addSignals = function(builder, SignalsOffset) {
  builder.addFieldOffset(4, SignalsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.DisplayFB.createSignalsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.DisplayFB.startSignalsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} RegionMapOffset
 */
Iris.Serialization.DisplayFB.addRegionMap = function(builder, RegionMapOffset) {
  builder.addFieldOffset(5, RegionMapOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.DisplayFB.endDisplayFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.ConfigFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.ConfigFB}
 */
Iris.Serialization.ConfigFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.ConfigFB=} obj
 * @returns {Iris.Serialization.ConfigFB}
 */
Iris.Serialization.ConfigFB.getRootAsConfigFB = function(bb, obj) {
  return (obj || new Iris.Serialization.ConfigFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ConfigFB.prototype.Version = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ConfigFB.prototype.MachineId = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {Iris.Serialization.AudioConfigFB=} obj
 * @returns {Iris.Serialization.AudioConfigFB}
 */
Iris.Serialization.ConfigFB.prototype.AudioConfig = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Iris.Serialization.AudioConfigFB).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {Iris.Serialization.VvvvConfigFB=} obj
 * @returns {Iris.Serialization.VvvvConfigFB}
 */
Iris.Serialization.ConfigFB.prototype.VvvvConfig = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new Iris.Serialization.VvvvConfigFB).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {Iris.Serialization.RaftConfigFB=} obj
 * @returns {Iris.Serialization.RaftConfigFB}
 */
Iris.Serialization.ConfigFB.prototype.RaftConfig = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Iris.Serialization.RaftConfigFB).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {Iris.Serialization.TimingConfigFB=} obj
 * @returns {Iris.Serialization.TimingConfigFB}
 */
Iris.Serialization.ConfigFB.prototype.TimingConfig = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new Iris.Serialization.TimingConfigFB).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {Iris.Serialization.ClusterConfigFB=} obj
 * @returns {Iris.Serialization.ClusterConfigFB}
 */
Iris.Serialization.ConfigFB.prototype.ClusterConfig = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new Iris.Serialization.ClusterConfigFB).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.ViewPortFB=} obj
 * @returns {Iris.Serialization.ViewPortFB}
 */
Iris.Serialization.ConfigFB.prototype.ViewPorts = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? (obj || new Iris.Serialization.ViewPortFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.ConfigFB.prototype.ViewPortsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.DisplayFB=} obj
 * @returns {Iris.Serialization.DisplayFB}
 */
Iris.Serialization.ConfigFB.prototype.Displays = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? (obj || new Iris.Serialization.DisplayFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.ConfigFB.prototype.DisplaysLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.TaskFB=} obj
 * @returns {Iris.Serialization.TaskFB}
 */
Iris.Serialization.ConfigFB.prototype.Tasks = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? (obj || new Iris.Serialization.TaskFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.ConfigFB.prototype.TasksLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.ConfigFB.startConfigFB = function(builder) {
  builder.startObject(10);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} VersionOffset
 */
Iris.Serialization.ConfigFB.addVersion = function(builder, VersionOffset) {
  builder.addFieldOffset(0, VersionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MachineIdOffset
 */
Iris.Serialization.ConfigFB.addMachineId = function(builder, MachineIdOffset) {
  builder.addFieldOffset(1, MachineIdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} AudioConfigOffset
 */
Iris.Serialization.ConfigFB.addAudioConfig = function(builder, AudioConfigOffset) {
  builder.addFieldOffset(2, AudioConfigOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} VvvvConfigOffset
 */
Iris.Serialization.ConfigFB.addVvvvConfig = function(builder, VvvvConfigOffset) {
  builder.addFieldOffset(3, VvvvConfigOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} RaftConfigOffset
 */
Iris.Serialization.ConfigFB.addRaftConfig = function(builder, RaftConfigOffset) {
  builder.addFieldOffset(4, RaftConfigOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TimingConfigOffset
 */
Iris.Serialization.ConfigFB.addTimingConfig = function(builder, TimingConfigOffset) {
  builder.addFieldOffset(5, TimingConfigOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ClusterConfigOffset
 */
Iris.Serialization.ConfigFB.addClusterConfig = function(builder, ClusterConfigOffset) {
  builder.addFieldOffset(6, ClusterConfigOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ViewPortsOffset
 */
Iris.Serialization.ConfigFB.addViewPorts = function(builder, ViewPortsOffset) {
  builder.addFieldOffset(7, ViewPortsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ConfigFB.createViewPortsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.ConfigFB.startViewPortsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} DisplaysOffset
 */
Iris.Serialization.ConfigFB.addDisplays = function(builder, DisplaysOffset) {
  builder.addFieldOffset(8, DisplaysOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ConfigFB.createDisplaysVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.ConfigFB.startDisplaysVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} TasksOffset
 */
Iris.Serialization.ConfigFB.addTasks = function(builder, TasksOffset) {
  builder.addFieldOffset(9, TasksOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ConfigFB.createTasksVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.ConfigFB.startTasksVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ConfigFB.endConfigFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.ProjectFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.ProjectFB}
 */
Iris.Serialization.ProjectFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.ProjectFB=} obj
 * @returns {Iris.Serialization.ProjectFB}
 */
Iris.Serialization.ProjectFB.getRootAsProjectFB = function(bb, obj) {
  return (obj || new Iris.Serialization.ProjectFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ProjectFB.prototype.Id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ProjectFB.prototype.Name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ProjectFB.prototype.Path = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ProjectFB.prototype.CreatedOn = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ProjectFB.prototype.LastSaved = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ProjectFB.prototype.Copyright = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ProjectFB.prototype.Author = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {Iris.Serialization.ConfigFB=} obj
 * @returns {Iris.Serialization.ConfigFB}
 */
Iris.Serialization.ProjectFB.prototype.Config = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? (obj || new Iris.Serialization.ConfigFB).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.ProjectFB.startProjectFB = function(builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} IdOffset
 */
Iris.Serialization.ProjectFB.addId = function(builder, IdOffset) {
  builder.addFieldOffset(0, IdOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} NameOffset
 */
Iris.Serialization.ProjectFB.addName = function(builder, NameOffset) {
  builder.addFieldOffset(1, NameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PathOffset
 */
Iris.Serialization.ProjectFB.addPath = function(builder, PathOffset) {
  builder.addFieldOffset(2, PathOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} CreatedOnOffset
 */
Iris.Serialization.ProjectFB.addCreatedOn = function(builder, CreatedOnOffset) {
  builder.addFieldOffset(3, CreatedOnOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} LastSavedOffset
 */
Iris.Serialization.ProjectFB.addLastSaved = function(builder, LastSavedOffset) {
  builder.addFieldOffset(4, LastSavedOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} CopyrightOffset
 */
Iris.Serialization.ProjectFB.addCopyright = function(builder, CopyrightOffset) {
  builder.addFieldOffset(5, CopyrightOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} AuthorOffset
 */
Iris.Serialization.ProjectFB.addAuthor = function(builder, AuthorOffset) {
  builder.addFieldOffset(6, AuthorOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ConfigOffset
 */
Iris.Serialization.ProjectFB.addConfig = function(builder, ConfigOffset) {
  builder.addFieldOffset(7, ConfigOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ProjectFB.endProjectFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.StateFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.StateFB}
 */
Iris.Serialization.StateFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.StateFB=} obj
 * @returns {Iris.Serialization.StateFB}
 */
Iris.Serialization.StateFB.getRootAsStateFB = function(bb, obj) {
  return (obj || new Iris.Serialization.StateFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {Iris.Serialization.ProjectFB=} obj
 * @returns {Iris.Serialization.ProjectFB}
 */
Iris.Serialization.StateFB.prototype.Project = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Iris.Serialization.ProjectFB).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.PatchFB=} obj
 * @returns {Iris.Serialization.PatchFB}
 */
Iris.Serialization.StateFB.prototype.Patches = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Iris.Serialization.PatchFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.StateFB.prototype.PatchesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.CueFB=} obj
 * @returns {Iris.Serialization.CueFB}
 */
Iris.Serialization.StateFB.prototype.Cues = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Iris.Serialization.CueFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.StateFB.prototype.CuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.CueListFB=} obj
 * @returns {Iris.Serialization.CueListFB}
 */
Iris.Serialization.StateFB.prototype.CueLists = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new Iris.Serialization.CueListFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.StateFB.prototype.CueListsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.SessionFB=} obj
 * @returns {Iris.Serialization.SessionFB}
 */
Iris.Serialization.StateFB.prototype.Sessions = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Iris.Serialization.SessionFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.StateFB.prototype.SessionsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.UserFB=} obj
 * @returns {Iris.Serialization.UserFB}
 */
Iris.Serialization.StateFB.prototype.Users = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new Iris.Serialization.UserFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.StateFB.prototype.UsersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.IrisClientFB=} obj
 * @returns {Iris.Serialization.IrisClientFB}
 */
Iris.Serialization.StateFB.prototype.Clients = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new Iris.Serialization.IrisClientFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.StateFB.prototype.ClientsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Iris.Serialization.DiscoveredServiceFB=} obj
 * @returns {Iris.Serialization.DiscoveredServiceFB}
 */
Iris.Serialization.StateFB.prototype.DiscoveredServices = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? (obj || new Iris.Serialization.DiscoveredServiceFB).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Iris.Serialization.StateFB.prototype.DiscoveredServicesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.StateFB.startStateFB = function(builder) {
  builder.startObject(8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ProjectOffset
 */
Iris.Serialization.StateFB.addProject = function(builder, ProjectOffset) {
  builder.addFieldOffset(0, ProjectOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PatchesOffset
 */
Iris.Serialization.StateFB.addPatches = function(builder, PatchesOffset) {
  builder.addFieldOffset(1, PatchesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StateFB.createPatchesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.StateFB.startPatchesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} CuesOffset
 */
Iris.Serialization.StateFB.addCues = function(builder, CuesOffset) {
  builder.addFieldOffset(2, CuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StateFB.createCuesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.StateFB.startCuesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} CueListsOffset
 */
Iris.Serialization.StateFB.addCueLists = function(builder, CueListsOffset) {
  builder.addFieldOffset(3, CueListsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StateFB.createCueListsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.StateFB.startCueListsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} SessionsOffset
 */
Iris.Serialization.StateFB.addSessions = function(builder, SessionsOffset) {
  builder.addFieldOffset(4, SessionsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StateFB.createSessionsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.StateFB.startSessionsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} UsersOffset
 */
Iris.Serialization.StateFB.addUsers = function(builder, UsersOffset) {
  builder.addFieldOffset(5, UsersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StateFB.createUsersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.StateFB.startUsersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ClientsOffset
 */
Iris.Serialization.StateFB.addClients = function(builder, ClientsOffset) {
  builder.addFieldOffset(6, ClientsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StateFB.createClientsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.StateFB.startClientsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} DiscoveredServicesOffset
 */
Iris.Serialization.StateFB.addDiscoveredServices = function(builder, DiscoveredServicesOffset) {
  builder.addFieldOffset(7, DiscoveredServicesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StateFB.createDiscoveredServicesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Iris.Serialization.StateFB.startDiscoveredServicesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StateFB.endStateFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.ErrorFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.ErrorFB}
 */
Iris.Serialization.ErrorFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.ErrorFB=} obj
 * @returns {Iris.Serialization.ErrorFB}
 */
Iris.Serialization.ErrorFB.getRootAsErrorFB = function(bb, obj) {
  return (obj || new Iris.Serialization.ErrorFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Iris.Serialization.ErrorTypeFB}
 */
Iris.Serialization.ErrorFB.prototype.Type = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Iris.Serialization.ErrorTypeFB} */ (this.bb.readUint16(this.bb_pos + offset)) : Iris.Serialization.ErrorTypeFB.GitErrorFB;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ErrorFB.prototype.Location = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Iris.Serialization.ErrorFB.prototype.Message = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.ErrorFB.startErrorFB = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Iris.Serialization.ErrorTypeFB} Type
 */
Iris.Serialization.ErrorFB.addType = function(builder, Type) {
  builder.addFieldInt16(0, Type, Iris.Serialization.ErrorTypeFB.GitErrorFB);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} LocationOffset
 */
Iris.Serialization.ErrorFB.addLocation = function(builder, LocationOffset) {
  builder.addFieldOffset(1, LocationOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} MessageOffset
 */
Iris.Serialization.ErrorFB.addMessage = function(builder, MessageOffset) {
  builder.addFieldOffset(2, MessageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.ErrorFB.endErrorFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Iris.Serialization.StateMachineFB = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Iris.Serialization.StateMachineFB}
 */
Iris.Serialization.StateMachineFB.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Iris.Serialization.StateMachineFB=} obj
 * @returns {Iris.Serialization.StateMachineFB}
 */
Iris.Serialization.StateMachineFB.getRootAsStateMachineFB = function(bb, obj) {
  return (obj || new Iris.Serialization.StateMachineFB).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {Iris.Serialization.StateMachineActionFB}
 */
Iris.Serialization.StateMachineFB.prototype.Action = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {Iris.Serialization.StateMachineActionFB} */ (this.bb.readUint16(this.bb_pos + offset)) : Iris.Serialization.StateMachineActionFB.AddFB;
};

/**
 * @returns {Iris.Serialization.StateMachinePayloadFB}
 */
Iris.Serialization.StateMachineFB.prototype.PayloadType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {Iris.Serialization.StateMachinePayloadFB} */ (this.bb.readUint8(this.bb_pos + offset)) : Iris.Serialization.StateMachinePayloadFB.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
Iris.Serialization.StateMachineFB.prototype.Payload = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Iris.Serialization.StateMachineFB.startStateMachineFB = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Iris.Serialization.StateMachineActionFB} Action
 */
Iris.Serialization.StateMachineFB.addAction = function(builder, Action) {
  builder.addFieldInt16(0, Action, Iris.Serialization.StateMachineActionFB.AddFB);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Iris.Serialization.StateMachinePayloadFB} PayloadType
 */
Iris.Serialization.StateMachineFB.addPayloadType = function(builder, PayloadType) {
  builder.addFieldInt8(1, PayloadType, Iris.Serialization.StateMachinePayloadFB.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} PayloadOffset
 */
Iris.Serialization.StateMachineFB.addPayload = function(builder, PayloadOffset) {
  builder.addFieldOffset(2, PayloadOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Iris.Serialization.StateMachineFB.endStateMachineFB = function(builder) {
  var offset = builder.endObject();
  return offset;
};

// Exports for Node.js and RequireJS
this.Iris = Iris;
