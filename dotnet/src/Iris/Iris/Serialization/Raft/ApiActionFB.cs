// automatically generated by the FlatBuffers compiler, do not modify

namespace Iris.Serialization.Raft
{

using System;
using FlatBuffers;

public struct ApiActionFB : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ApiActionFB GetRootAsApiActionFB(ByteBuffer _bb) { return GetRootAsApiActionFB(_bb, new ApiActionFB()); }
  public static ApiActionFB GetRootAsApiActionFB(ByteBuffer _bb, ApiActionFB obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ApiActionFB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ActionTypeFB Action { get { int o = __p.__offset(4); return o != 0 ? (ActionTypeFB)__p.bb.GetUshort(o + __p.bb_pos) : ActionTypeFB.AddFB; } }
  public PayloadFB PayloadType { get { int o = __p.__offset(6); return o != 0 ? (PayloadFB)__p.bb.Get(o + __p.bb_pos) : PayloadFB.NONE; } }
  public TTable? Payload<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o) : null; }

  public static Offset<ApiActionFB> CreateApiActionFB(FlatBufferBuilder builder,
      ActionTypeFB Action = ActionTypeFB.AddFB,
      PayloadFB Payload_type = PayloadFB.NONE,
      int PayloadOffset = 0) {
    builder.StartObject(3);
    ApiActionFB.AddPayload(builder, PayloadOffset);
    ApiActionFB.AddAction(builder, Action);
    ApiActionFB.AddPayloadType(builder, Payload_type);
    return ApiActionFB.EndApiActionFB(builder);
  }

  public static void StartApiActionFB(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddAction(FlatBufferBuilder builder, ActionTypeFB Action) { builder.AddUshort(0, (ushort)Action, 0); }
  public static void AddPayloadType(FlatBufferBuilder builder, PayloadFB PayloadType) { builder.AddByte(1, (byte)PayloadType, 0); }
  public static void AddPayload(FlatBufferBuilder builder, int PayloadOffset) { builder.AddOffset(2, PayloadOffset, 0); }
  public static Offset<ApiActionFB> EndApiActionFB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ApiActionFB>(o);
  }
};


}
