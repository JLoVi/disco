// automatically generated by the FlatBuffers compiler, do not modify

namespace Iris.Serialization.Raft
{

using System;
using FlatBuffers;

public sealed class ColorSpaceFB : Table {
  public static ColorSpaceFB GetRootAsColorSpaceFB(ByteBuffer _bb) { return GetRootAsColorSpaceFB(_bb, new ColorSpaceFB()); }
  public static ColorSpaceFB GetRootAsColorSpaceFB(ByteBuffer _bb, ColorSpaceFB obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public ColorSpaceFB __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public ColorSpaceTypeFB ValueType { get { int o = __offset(4); return o != 0 ? (ColorSpaceTypeFB)bb.Get(o + bb_pos) : ColorSpaceTypeFB.NONE; } }
  public TTable GetValue<TTable>(TTable obj) where TTable : Table { int o = __offset(6); return o != 0 ? __union(obj, o) : null; }

  public static Offset<ColorSpaceFB> CreateColorSpaceFB(FlatBufferBuilder builder,
      ColorSpaceTypeFB Value_type = ColorSpaceTypeFB.NONE,
      int ValueOffset = 0) {
    builder.StartObject(2);
    ColorSpaceFB.AddValue(builder, ValueOffset);
    ColorSpaceFB.AddValueType(builder, Value_type);
    return ColorSpaceFB.EndColorSpaceFB(builder);
  }

  public static void StartColorSpaceFB(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddValueType(FlatBufferBuilder builder, ColorSpaceTypeFB ValueType) { builder.AddByte(0, (byte)ValueType, 0); }
  public static void AddValue(FlatBufferBuilder builder, int ValueOffset) { builder.AddOffset(1, ValueOffset, 0); }
  public static Offset<ColorSpaceFB> EndColorSpaceFB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ColorSpaceFB>(o);
  }
};


}
