// automatically generated by the FlatBuffers compiler, do not modify

namespace Iris.Serialization.Raft
{

using System;
using FlatBuffers;

public sealed class SnapshotResponseFB : Table {
  public static SnapshotResponseFB GetRootAsSnapshotResponseFB(ByteBuffer _bb) { return GetRootAsSnapshotResponseFB(_bb, new SnapshotResponseFB()); }
  public static SnapshotResponseFB GetRootAsSnapshotResponseFB(ByteBuffer _bb, SnapshotResponseFB obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public SnapshotResponseFB __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public ulong Term { get { int o = __offset(4); return o != 0 ? bb.GetUlong(o + bb_pos) : (ulong)0; } }

  public static Offset<SnapshotResponseFB> CreateSnapshotResponseFB(FlatBufferBuilder builder,
      ulong Term = 0) {
    builder.StartObject(1);
    SnapshotResponseFB.AddTerm(builder, Term);
    return SnapshotResponseFB.EndSnapshotResponseFB(builder);
  }

  public static void StartSnapshotResponseFB(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddTerm(FlatBufferBuilder builder, ulong Term) { builder.AddUlong(0, Term, 0); }
  public static Offset<SnapshotResponseFB> EndSnapshotResponseFB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SnapshotResponseFB>(o);
  }
};


}
