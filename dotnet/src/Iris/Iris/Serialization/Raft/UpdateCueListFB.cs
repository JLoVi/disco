// automatically generated by the FlatBuffers compiler, do not modify

namespace Iris.Serialization.Raft
{

using System;
using FlatBuffers;

public struct UpdateCueListFB : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static UpdateCueListFB GetRootAsUpdateCueListFB(ByteBuffer _bb) { return GetRootAsUpdateCueListFB(_bb, new UpdateCueListFB()); }
  public static UpdateCueListFB GetRootAsUpdateCueListFB(ByteBuffer _bb, UpdateCueListFB obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public UpdateCueListFB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CueListFB? CueList { get { int o = __p.__offset(4); return o != 0 ? (CueListFB?)(new CueListFB()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<UpdateCueListFB> CreateUpdateCueListFB(FlatBufferBuilder builder,
      Offset<CueListFB> CueListOffset = default(Offset<CueListFB>)) {
    builder.StartObject(1);
    UpdateCueListFB.AddCueList(builder, CueListOffset);
    return UpdateCueListFB.EndUpdateCueListFB(builder);
  }

  public static void StartUpdateCueListFB(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddCueList(FlatBufferBuilder builder, Offset<CueListFB> CueListOffset) { builder.AddOffset(0, CueListOffset.Value, 0); }
  public static Offset<UpdateCueListFB> EndUpdateCueListFB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<UpdateCueListFB>(o);
  }
};


}
