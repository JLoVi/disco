// automatically generated by the FlatBuffers compiler, do not modify

namespace Iris.Serialization.Raft
{

using System;
using FlatBuffers;

public struct StateMachineFB : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static StateMachineFB GetRootAsStateMachineFB(ByteBuffer _bb) { return GetRootAsStateMachineFB(_bb, new StateMachineFB()); }
  public static StateMachineFB GetRootAsStateMachineFB(ByteBuffer _bb, StateMachineFB obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public StateMachineFB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public StateMachineTypeFB AppEventType { get { int o = __p.__offset(4); return o != 0 ? (StateMachineTypeFB)__p.bb.Get(o + __p.bb_pos) : StateMachineTypeFB.NONE; } }
  public TTable? AppEvent<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o) : null; }

  public static Offset<StateMachineFB> CreateStateMachineFB(FlatBufferBuilder builder,
      StateMachineTypeFB AppEvent_type = StateMachineTypeFB.NONE,
      int AppEventOffset = 0) {
    builder.StartObject(2);
    StateMachineFB.AddAppEvent(builder, AppEventOffset);
    StateMachineFB.AddAppEventType(builder, AppEvent_type);
    return StateMachineFB.EndStateMachineFB(builder);
  }

  public static void StartStateMachineFB(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddAppEventType(FlatBufferBuilder builder, StateMachineTypeFB AppEventType) { builder.AddByte(0, (byte)AppEventType, 0); }
  public static void AddAppEvent(FlatBufferBuilder builder, int AppEventOffset) { builder.AddOffset(1, AppEventOffset, 0); }
  public static Offset<StateMachineFB> EndStateMachineFB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<StateMachineFB>(o);
  }
};


}
