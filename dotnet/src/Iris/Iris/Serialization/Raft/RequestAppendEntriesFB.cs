// automatically generated by the FlatBuffers compiler, do not modify

namespace Iris.Serialization.Raft
{

using System;
using FlatBuffers;

public sealed class RequestAppendEntriesFB : Table {
  public static RequestAppendEntriesFB GetRootAsRequestAppendEntriesFB(ByteBuffer _bb) { return GetRootAsRequestAppendEntriesFB(_bb, new RequestAppendEntriesFB()); }
  public static RequestAppendEntriesFB GetRootAsRequestAppendEntriesFB(ByteBuffer _bb, RequestAppendEntriesFB obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public RequestAppendEntriesFB __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string NodeId { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetNodeIdBytes() { return __vector_as_arraysegment(4); }
  public AppendEntriesFB Request { get { return GetRequest(new AppendEntriesFB()); } }
  public AppendEntriesFB GetRequest(AppendEntriesFB obj) { int o = __offset(6); return o != 0 ? obj.__init(__indirect(o + bb_pos), bb) : null; }

  public static Offset<RequestAppendEntriesFB> CreateRequestAppendEntriesFB(FlatBufferBuilder builder,
      StringOffset NodeIdOffset = default(StringOffset),
      Offset<AppendEntriesFB> RequestOffset = default(Offset<AppendEntriesFB>)) {
    builder.StartObject(2);
    RequestAppendEntriesFB.AddRequest(builder, RequestOffset);
    RequestAppendEntriesFB.AddNodeId(builder, NodeIdOffset);
    return RequestAppendEntriesFB.EndRequestAppendEntriesFB(builder);
  }

  public static void StartRequestAppendEntriesFB(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddNodeId(FlatBufferBuilder builder, StringOffset NodeIdOffset) { builder.AddOffset(0, NodeIdOffset.Value, 0); }
  public static void AddRequest(FlatBufferBuilder builder, Offset<AppendEntriesFB> RequestOffset) { builder.AddOffset(1, RequestOffset.Value, 0); }
  public static Offset<RequestAppendEntriesFB> EndRequestAppendEntriesFB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<RequestAppendEntriesFB>(o);
  }
};


}
