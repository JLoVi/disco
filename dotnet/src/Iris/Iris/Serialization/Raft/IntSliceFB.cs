// automatically generated by the FlatBuffers compiler, do not modify

namespace Iris.Serialization.Raft
{

using System;
using FlatBuffers;

public struct IntSliceFB : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static IntSliceFB GetRootAsIntSliceFB(ByteBuffer _bb) { return GetRootAsIntSliceFB(_bb, new IntSliceFB()); }
  public static IntSliceFB GetRootAsIntSliceFB(ByteBuffer _bb, IntSliceFB obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public IntSliceFB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint Index { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public int Value { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<IntSliceFB> CreateIntSliceFB(FlatBufferBuilder builder,
      uint Index = 0,
      int Value = 0) {
    builder.StartObject(2);
    IntSliceFB.AddValue(builder, Value);
    IntSliceFB.AddIndex(builder, Index);
    return IntSliceFB.EndIntSliceFB(builder);
  }

  public static void StartIntSliceFB(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddIndex(FlatBufferBuilder builder, uint Index) { builder.AddUint(0, Index, 0); }
  public static void AddValue(FlatBufferBuilder builder, int Value) { builder.AddInt(1, Value, 0); }
  public static Offset<IntSliceFB> EndIntSliceFB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<IntSliceFB>(o);
  }
};


}
