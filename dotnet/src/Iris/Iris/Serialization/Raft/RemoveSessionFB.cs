// automatically generated by the FlatBuffers compiler, do not modify

namespace Iris.Serialization.Raft
{

using System;
using FlatBuffers;

public struct RemoveSessionFB : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static RemoveSessionFB GetRootAsRemoveSessionFB(ByteBuffer _bb) { return GetRootAsRemoveSessionFB(_bb, new RemoveSessionFB()); }
  public static RemoveSessionFB GetRootAsRemoveSessionFB(ByteBuffer _bb, RemoveSessionFB obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public RemoveSessionFB __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SessionFB? Session { get { int o = __p.__offset(4); return o != 0 ? (SessionFB?)(new SessionFB()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<RemoveSessionFB> CreateRemoveSessionFB(FlatBufferBuilder builder,
      Offset<SessionFB> SessionOffset = default(Offset<SessionFB>)) {
    builder.StartObject(1);
    RemoveSessionFB.AddSession(builder, SessionOffset);
    return RemoveSessionFB.EndRemoveSessionFB(builder);
  }

  public static void StartRemoveSessionFB(FlatBufferBuilder builder) { builder.StartObject(1); }
  public static void AddSession(FlatBufferBuilder builder, Offset<SessionFB> SessionOffset) { builder.AddOffset(0, SessionOffset.Value, 0); }
  public static Offset<RemoveSessionFB> EndRemoveSessionFB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<RemoveSessionFB>(o);
  }
};


}
