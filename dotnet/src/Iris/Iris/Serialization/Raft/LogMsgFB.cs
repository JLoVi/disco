// automatically generated by the FlatBuffers compiler, do not modify

namespace Iris.Serialization.Raft
{

using System;
using FlatBuffers;

public sealed class LogMsgFB : Table {
  public static LogMsgFB GetRootAsLogMsgFB(ByteBuffer _bb) { return GetRootAsLogMsgFB(_bb, new LogMsgFB()); }
  public static LogMsgFB GetRootAsLogMsgFB(ByteBuffer _bb, LogMsgFB obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public LogMsgFB __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public string LogLevel { get { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetLogLevelBytes() { return __vector_as_arraysegment(4); }
  public string Msg { get { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetMsgBytes() { return __vector_as_arraysegment(6); }

  public static Offset<LogMsgFB> CreateLogMsgFB(FlatBufferBuilder builder,
      StringOffset LogLevelOffset = default(StringOffset),
      StringOffset MsgOffset = default(StringOffset)) {
    builder.StartObject(2);
    LogMsgFB.AddMsg(builder, MsgOffset);
    LogMsgFB.AddLogLevel(builder, LogLevelOffset);
    return LogMsgFB.EndLogMsgFB(builder);
  }

  public static void StartLogMsgFB(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddLogLevel(FlatBufferBuilder builder, StringOffset LogLevelOffset) { builder.AddOffset(0, LogLevelOffset.Value, 0); }
  public static void AddMsg(FlatBufferBuilder builder, StringOffset MsgOffset) { builder.AddOffset(1, MsgOffset.Value, 0); }
  public static Offset<LogMsgFB> EndLogMsgFB(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<LogMsgFB>(o);
  }
};


}
