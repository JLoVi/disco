// automatically generated by the FlatBuffers compiler, do not modify

namespace Iris.Types
{

using System;
using FlatBuffers;

public sealed class StringSlice : Table {
  public static StringSlice GetRootAsStringSlice(ByteBuffer _bb) { return GetRootAsStringSlice(_bb, new StringSlice()); }
  public static StringSlice GetRootAsStringSlice(ByteBuffer _bb, StringSlice obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public StringSlice __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public byte Index { get { int o = __offset(4); return o != 0 ? bb.Get(o + bb_pos) : (byte)0; } }
  public string Value { get { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; } }
  public ArraySegment<byte>? GetValueBytes() { return __vector_as_arraysegment(6); }

  public static Offset<StringSlice> CreateStringSlice(FlatBufferBuilder builder,
      byte Index = 0,
      StringOffset ValueOffset = default(StringOffset)) {
    builder.StartObject(2);
    StringSlice.AddValue(builder, ValueOffset);
    StringSlice.AddIndex(builder, Index);
    return StringSlice.EndStringSlice(builder);
  }

  public static void StartStringSlice(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddIndex(FlatBufferBuilder builder, byte Index) { builder.AddByte(0, Index, 0); }
  public static void AddValue(FlatBufferBuilder builder, StringOffset ValueOffset) { builder.AddOffset(1, ValueOffset.Value, 0); }
  public static Offset<StringSlice> EndStringSlice(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    builder.Required(o, 6);  // Value
    return new Offset<StringSlice>(o);
  }
};


}
