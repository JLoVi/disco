namespace Iris.Serialization;

//  ____       _
// |  _ \ ___ | | ___
// | |_) / _ \| |/ _ \
// |  _ < (_) | |  __/
// |_| \_\___/|_|\___|

enum RoleFB:ushort {
     RendererFB = 0
}

//   ____ _ _            _
//  / ___| (_) ___ _ __ | |_
// | |   | | |/ _ \ '_ \| __|
// | |___| | |  __/ | | | |_
//  \____|_|_|\___|_| |_|\__|

table IrisClientFB {
     Id: string;
     Name: string;
     Role: RoleFB;
     Port: ushort;
     IpAddress: string;
}

table DiscoveredServiceFB {
     Id: string;
     Machine: string;
     Port: ushort;
     Name: string;
     FullName: string;
     Type: string;
     HostName: string;
     HostTarget: string;
     Aliases: [string];
     Protocol: string;
     AddressList: [string];
     Metadata: [string];
}

//  ____  _        _             _____ ____
// / ___|| |_ _ __(_)_ __   __ _|  ___| __ )
// \___ \| __| '__| | '_ \ / _` | |_  |  _ \
//  ___) | |_| |  | | | | | (_| |  _| | |_) |
// |____/ \__|_|  |_|_| |_|\__, |_|   |____/
//                         |___/

table StringFB {
     Value: string;
}

table DoubleFB {
     Value: double;
}

table BoolFB {
     Value: bool;
}

table ByteFB {
     Value: string;
}

//  _                _____                 _
// | |    ___   __ _| ____|_   _____ _ __ | |_
// | |   / _ \ / _` |  _| \ \ / / _ \ '_ \| __|
// | |__| (_) | (_| | |___ \ V /  __/ | | | |_
// |_____\___/ \__, |_____| \_/ \___|_| |_|\__|
//             |___/

table LogEventFB {
     Time: uint;
     Thread: int;
     Tier: string;
     Id: string;
     Tag: string;
     LogLevel: string;
     Message: string;
}

//  ____  _ _
// / ___|| (_) ___ ___
// \___ \| | |/ __/ _ \
//  ___) | | | (_|  __/
// |____/|_|_|\___\___|

enum BehaviorFB:ushort {
     SimpleFB = 0,
     MultiLineFB = 1,
     FileNameFB = 2,
     DirectoryFB = 3,
     UrlFB = 4,
     IPFB = 5
}

table EnumPropertyFB {
      Key: string;
      Value: string;
}

table RGBAValueFB {
     Red:   ubyte;
     Green: ubyte;
     Blue:  ubyte;
     Alpha: ubyte;
}

table HSLAValueFB {
     Hue: ubyte;
     Saturation: ubyte;
     Lightness: ubyte;
     Alpha: ubyte;
}

union ColorSpaceTypeFB {
      RGBAValueFB,
      HSLAValueFB
}

table ColorSpaceFB {
      Value: ColorSpaceTypeFB;
}

union SliceTypeFB {
      StringFB,
      DoubleFB,
      BoolFB,
      ByteFB,
      EnumPropertyFB,
      ColorSpaceFB,
}

table SliceFB {
      Index: uint;
      Slice: SliceTypeFB;
}

table SlicesFB {
      Id: string;
      Slices: [SliceFB];
}

enum ConnectionDirectionFB:ushort {
      InputFB = 0,
      OutputFB = 1,
}

enum VecSizeTypeFB:ushort {
      DynamicFB = 0,
      FixedFB = 1,
}

table VecSizeFB {
      Type: VecSizeTypeFB;
      Size: ushort;
}

//  ____  _
// |  _ \(_)_ __
// | |_) | | '_ \
// |  __/| | | | |
// |_|   |_|_| |_|

table StringPinFB {
      Id         : string;
      Name       : string;
      PinGroup   : string;
      Tags       : [string];
      Direction  : ConnectionDirectionFB;
      VecSize    : VecSizeFB;
      Behavior   : BehaviorFB;
      MaxChars   : int;
      Values     : [string];
}

table NumberPinFB {
      Id         : string;
      Name       : string;
      PinGroup   : string;
      Tags       : [string];
      Min        : int;
      Max        : int;
      Unit       : string;
      Precision  : uint;
      Direction  : ConnectionDirectionFB;
      VecSize    : VecSizeFB;
      Values     : [double];
}

table BoolPinFB {
      Id         : string;
      Name       : string;
      PinGroup   : string;
      Tags       : [string];
      IsTrigger  : bool;
      Direction  : ConnectionDirectionFB;
      VecSize    : VecSizeFB;
      Values     : [bool];
}

table BytePinFB {
      Id         : string;
      Name       : string;
      PinGroup   : string;
      Tags       : [string];
      Direction  : ConnectionDirectionFB;
      VecSize    : VecSizeFB;
      Values     : [string];
}

table EnumPinFB {
      Id         : string;
      Name       : string;
      PinGroup   : string;
      Tags       : [string];
      Properties : [EnumPropertyFB];
      Direction  : ConnectionDirectionFB;
      VecSize    : VecSizeFB;
      Values     : [EnumPropertyFB];
}

table ColorPinFB {
      Id         : string;
      Name       : string;
      PinGroup   : string;
      Tags       : [string];
      VecSize    : VecSizeFB;
      Direction  : ConnectionDirectionFB;
      Values     : [ColorSpaceFB];
}

union PinTypeFB {
      StringPinFB,
      NumberPinFB,
      BoolPinFB,
      BytePinFB,
      EnumPinFB,
      ColorPinFB,
}

table PinFB {
      Pin: PinTypeFB;
}

//  ____       _       _
// |  _ \ __ _| |_ ___| |__
// | |_) / _` | __/ __| '_ \
// |  __/ (_| | || (__| | | |
// |_|   \__,_|\__\___|_| |_|

table PinGroupFB {
      Id:   string;
      Name: string;
      Pins: [PinFB];
}

//   ____
//  / ___|   _  ___
// | |  | | | |/ _ \
// | |__| |_| |  __/
//  \____\__,_|\___|

table CueFB {
      Id:    string;
      Name:  string;
      Pins: [PinFB];
}


//   ____           _     _     _
//  / ___|   _  ___| |   (_)___| |_
// | |  | | | |/ _ \ |   | / __| __|
// | |__| |_| |  __/ |___| \__ \ |_
//  \____\__,_|\___|_____|_|___/\__|

table CueListFB {
      Id:   string;
      Name: string;
      Cues: [CueFB];
}

//  _   _
// | | | |___  ___ _ __
// | | | / __|/ _ \ '__|
// | |_| \__ \  __/ |
//  \___/|___/\___|_|

table UserFB {
      Id:        string;
      UserName:  string;
      FirstName: string;
      LastName:  string;
      Email:     string;
      Password:  string;
      Salt:      string;
      Joined:    string;
      Created:   string;
}

//  ____                _
// / ___|  ___  ___ ___(_) ___  _ __
// \___ \ / _ \/ __/ __| |/ _ \| '_ \
//  ___) |  __/\__ \__ \ | (_) | | | |
// |____/ \___||___/___/_|\___/|_| |_|

table SessionFB {
      Id:        string;
      IpAddress: string;
      UserAgent: string;
}

//  ____        __ _   __  __                _
// |  _ \ __ _ / _| |_|  \/  | ___ _ __ ___ | |__   ___ _ __
// | |_) / _` | |_| __| |\/| |/ _ \ '_ ` _ \| '_ \ / _ \ '__|
// |  _ < (_| |  _| |_| |  | |  __/ | | | | | |_) |  __/ |
// |_| \_\__,_|_|  \__|_|  |_|\___|_| |_| |_|_.__/ \___|_|

enum RaftMemberStateFB:ubyte {
     JoiningFB = 0,
     RunningFB = 1,
     FailedFB  = 2
}

table RaftMemberFB {
      Id         : string;
      HostName   : string;
      IpAddr     : string;
      Port       : ushort;
      WsPort     : ushort;
      GitPort    : ushort;
      ApiPort    : ushort;
      Voting     : bool;
      VotedForMe : bool;
      State      : RaftMemberStateFB;
      NextIndex  : uint;
      MatchIndex : uint;
}

//   ____             __ _
//  / ___|___  _ __  / _(_) __ _
// | |   / _ \| '_ \| |_| |/ _` |
// | |__| (_) | | | |  _| | (_| |
//  \____\___/|_| |_|_| |_|\__, |
//                         |___/

table AudioConfigFB {
      SampleRate: uint;
}

table VvvvExeFB {
      Executable: string;
      Version: string;
      Required: bool;
}

table VvvvPluginFB {
      Name: string;
      Path: string;
}

table VvvvConfigFB {
      Executables: [ VvvvExeFB ];
      Plugins:     [ VvvvPluginFB ];
}

table RaftConfigFB {
      RequestTimeout: uint;
      ElectionTimeout: uint;
      MaxLogDepth: uint;
      LogLevel: string;
      DataDir: string;
      MaxRetries: ushort;
      PeriodicInterval: ushort;
}

table TimingConfigFB {
      Framebase: uint;
      Input: string;
      Servers: [ string ];
      UDPPort: uint;
      TCPPort: uint;
}

table HostGroupFB {
      Name: string;
      Members: [ string ];
}

table ClusterConfigFB {
      Name: string;
      Members: [ RaftMemberFB ];
      Groups: [ HostGroupFB ];
}

table ViewPortFB {
      Id: string;
      Name: string;
      PositionX: int;
      PositionY: int;
      SizeX: int;
      SizeY: int;
      OutputPositionX: int;
      OutputPositionY: int;
      OutputSizeX: int;
      OutputSizeY: int;
      OverlapX: int;
      OverlapY: int;
      Description: string;
}

table TaskFB {
      Id: string;
      Description: string;
      DisplayId: string;
      AudioStream: string;
      Arguments: [ string ];
}

table SignalFB {
      SizeX: int;
      SizeY: int;
      PositionX: int;
      PositionY: int;
} 

table RegionFB {
      Id: string;
      Name: string;
      SrcPositionX: int;
      SrcPositionY: int;
      SrcSizeX: int;
      SrcSizeY: int;
      OutputPositionX: int;
      OutputPositionY: int;
      OutputSizeX: int;
      OutputSizeY: int;
}

table RegionMapFB {
      SrcViewportId: string;
      Regions: [ RegionFB ]; 
}

table DisplayFB {
     Id: string;
     Name: string;
     SizeX: int;
     SizeY: int;
     Signals: [ SignalFB ];
     RegionMap: RegionMapFB;
}

table ConfigFB {
      Version:        string;
      MachineId:      string;
      AudioConfig:    AudioConfigFB;
      VvvvConfig:     VvvvConfigFB;
      RaftConfig:     RaftConfigFB;
      TimingConfig:   TimingConfigFB;
      ClusterConfig:  ClusterConfigFB;
      ViewPorts:      [ ViewPortFB ];
      Displays:       [ DisplayFB ];
      Tasks:          [ TaskFB ];
}

//  ____            _           _
// |  _ \ _ __ ___ (_) ___  ___| |_
// | |_) | '__/ _ \| |/ _ \/ __| __|
// |  __/| | | (_) | |  __/ (__| |_
// |_|   |_|  \___// |\___|\___|\__|
//               |__/

table ProjectFB {
      Id:        string;
      Name:      string;
      Path:      string;
      CreatedOn: string;
      LastSaved: string;
      Copyright: string;
      Author:    string;
      Config:    ConfigFB;
}

//  ____  _        _
// / ___|| |_ __ _| |_ ___
// \___ \| __/ _` | __/ _ \
//  ___) | || (_| | ||  __/
// |____/ \__\__,_|\__\___|

table StateFB {
      Project:  ProjectFB;
      PinGroups:  [PinGroupFB];
      Cues:     [CueFB];
      CueLists: [CueListFB];
      Sessions: [SessionFB];
      Users:    [UserFB];
      Clients:  [IrisClientFB];
      DiscoveredServices: [DiscoveredServiceFB];
}

//  _____
// | ____|_ __ _ __ ___  _ __
// |  _| | '__| '__/ _ \| '__|
// | |___| |  | | | (_) | |
// |_____|_|  |_|  \___/|_|

enum ErrorTypeFB:ushort {
     GitErrorFB,
     ProjectErrorFB,
     AssetErrorFB,
     ParseErrorFB,
     SocketErrorFB,
     ClientErrorFB,
     IOErrorFB,
     RaftErrorFB,
     OKFB,
     OtherFB
}

table ErrorFB {
      Type: ErrorTypeFB;
      Location: string;
      Message: string;
}

//  ____  _        _       __  __            _     _
// / ___|| |_ __ _| |_ ___|  \/  | __ _  ___| |__ (_)_ __   ___
// \___ \| __/ _` | __/ _ \ |\/| |/ _` |/ __| '_ \| | '_ \ / _ \
//  ___) | || (_| | ||  __/ |  | | (_| | (__| | | | | | | |  __/
// |____/ \__\__,_|\__\___|_|  |_|\__,_|\___|_| |_|_|_| |_|\___|

union StateMachinePayloadFB {
      CueFB,
      CueListFB,
      PinFB,
      PinGroupFB,
      IrisClientFB,
      RaftMemberFB,
      UserFB,
      SessionFB,
      LogEventFB,
      StringFB,
      StateFB,
      SlicesFB,
      ProjectFB,
      DiscoveredServiceFB
}

enum StateMachineActionFB:ushort {
      AddFB,
      UpdateFB,
      RemoveFB,
      LogEventFB,
      DataSnapshotFB,
      CallFB,
      UndoFB,
      RedoFB,
      ResetFB,
      SaveProjectFB,
      SetLogLevelFB,
}

table StateMachineFB {
      Action: StateMachineActionFB;
      Payload: StateMachinePayloadFB;
}